<?xml version="1.0"?>
<testsuite name="PhantomJS 2.1.1 (Linux 0.0.0)" package="" timestamp="2017-04-27T18:29:12" id="0" hostname="abdcsv-cpm05p" tests="203" errors="0" failures="0" time="33.751">
  <properties>
    <property name="browser.fullName" value="Mozilla/5.0 (Unknown; Linux x86_64) AppleWebKit/538.1 (KHTML, like Gecko) PhantomJS/2.1.1 Safari/538.1"/>
  </properties>
  <testcase name="vuforia-angular twx-dt-3dobject setup 3dobject set up with minimal attributes calls addAsset" time="0.067" classname="vuforia-angular twx-dt-3dobject setup"/>
  <testcase name="vuforia-angular twx-dt-3dobject setup 3dobject set up with minimal attributes calls addAsset in batch" time="0.022" classname="vuforia-angular twx-dt-3dobject setup"/>
  <testcase name="vuforia-angular twx-dt-3dobject setup 3dobject set up with json literals calls addAsset" time="0.03" classname="vuforia-angular twx-dt-3dobject setup"/>
  <testcase name="vuforia-angular twx-dt-3dobject setup 3dobject set up with json literals calls addAsset in batch" time="0.013" classname="vuforia-angular twx-dt-3dobject setup"/>
  <testcase name="vuforia-angular twx-dt-3dobject setup 3dobject set up with bindings calls addAsset" time="0.023" classname="vuforia-angular twx-dt-3dobject setup"/>
  <testcase name="vuforia-angular twx-dt-3dobject setup 3dobject set up with bindings calls addAsset in batch" time="0.013" classname="vuforia-angular twx-dt-3dobject setup"/>
  <testcase name="ar events should print a warning when called without an event name" time="0.026" classname="ar events"/>
  <testcase name="ar events should use a special querySelector for twx-dt-targets and broadcast the event from $rootScope" time="0.026" classname="ar events"/>
  <testcase name="ar events should use a special querySelector for twx-dt-targets and emit a bubbling DOM CustomEvent" time="0.02" classname="ar events"/>
  <testcase name="ar events should default to dispatching with the twx-dt-view element, if the event specified element was not found" time="0.019" classname="ar events"/>
  <testcase name="ar events should print a warning message if a custom event uses data that cannot be parsed as json" time="0.021" classname="ar events"/>
  <testcase name="ar events should parse json and pass structured data to DOM events" time="0.019" classname="ar events"/>
  <testcase name="ar events should pass the vanilla string to angular events" time="0.022" classname="ar events"/>
  <testcase name="vuforia-angular get-tracked should call getTracked and fire a propagating custom event" time="0.01" classname="vuforia-angular get-tracked"/>
  <testcase name="vuforia-angular get-tracked should call getTracked and fire an angular event on $rootScope" time="0.008" classname="vuforia-angular get-tracked"/>
  <testcase name="vuforia-angular twx-dt-image setup image set up with png calls addAsset" time="0.027" classname="vuforia-angular twx-dt-image setup"/>
  <testcase name="vuforia-angular twx-dt-image setup image set up with png calls addAsset in batch" time="0.014" classname="vuforia-angular twx-dt-image setup"/>
  <testcase name="vuforia-angular twx-dt-image setup image set up with svg calls addAsset" time="1.025" classname="vuforia-angular twx-dt-image setup"/>
  <testcase name="vuforia-angular twx-dt-image setup image set up with svg calls addAsset in batch" time="1.013" classname="vuforia-angular twx-dt-image setup"/>
  <testcase name="vuforia-angular twx-dt-sensor watches transform properties position watches x" time="0.043" classname="vuforia-angular twx-dt-sensor watches"/>
  <testcase name="vuforia-angular twx-dt-sensor watches transform properties position watches y" time="0.041" classname="vuforia-angular twx-dt-sensor watches"/>
  <testcase name="vuforia-angular twx-dt-sensor watches transform properties position watches z" time="0.039" classname="vuforia-angular twx-dt-sensor watches"/>
  <testcase name="vuforia-angular twx-dt-sensor watches transform properties scale watches sx" time="0.042" classname="vuforia-angular twx-dt-sensor watches"/>
  <testcase name="vuforia-angular twx-dt-sensor watches transform properties scale watches sy" time="0.047" classname="vuforia-angular twx-dt-sensor watches"/>
  <testcase name="vuforia-angular twx-dt-sensor watches transform properties scale watches sz" time="0.05" classname="vuforia-angular twx-dt-sensor watches"/>
  <testcase name="vuforia-angular twx-dt-sensor watches transform properties rotation watches rx" time="0.042" classname="vuforia-angular twx-dt-sensor watches"/>
  <testcase name="vuforia-angular twx-dt-sensor watches transform properties rotation watches ry" time="0.042" classname="vuforia-angular twx-dt-sensor watches"/>
  <testcase name="vuforia-angular twx-dt-sensor watches transform properties rotation watches rz" time="0.04" classname="vuforia-angular twx-dt-sensor watches"/>
  <testcase name="vuforia-angular twx-dt-sensor watches transform properties rotation calls setRotation only once if all properties change in a single digest cycle." time="0.068" classname="vuforia-angular twx-dt-sensor watches"/>
  <testcase name="vuforia-angular twx-dt-sensor watches rendering properties watches billboard" time="0.045" classname="vuforia-angular twx-dt-sensor watches"/>
  <testcase name="vuforia-angular twx-dt-sensor watches rendering properties watches occlude" time="0.043" classname="vuforia-angular twx-dt-sensor watches"/>
  <testcase name="vuforia-angular twx-dt-sensor watches rendering properties watches hidden" time="0.04" classname="vuforia-angular twx-dt-sensor watches"/>
  <testcase name="vuforia-angular twx-dt-sensor watches rendering properties watches phantom" time="0.042" classname="vuforia-angular twx-dt-sensor watches"/>
  <testcase name="vuforia-angular twx-dt-sensor watches rendering properties watches opacity" time="0.04" classname="vuforia-angular twx-dt-sensor watches"/>
  <testcase name="vuforia-angular twx-dt-sensor watches rendering properties watches decal" time="0.04" classname="vuforia-angular twx-dt-sensor watches"/>
  <testcase name="vuforia-angular twx-dt-sensor watches rendering properties watches shader" time="0.043" classname="vuforia-angular twx-dt-sensor watches"/>
  <testcase name="vuforia-angular twx-dt-sensor watches rendering properties will set multiple properties in a single call" time="0.042" classname="vuforia-angular twx-dt-sensor watches"/>
  <testcase name="vuforia-angular twx-dt-sensor watches listens to src and directly calls setTexture if src doesn't end with svg." time="0.039" classname="vuforia-angular twx-dt-sensor watches"/>
  <testcase name="vuforia-angular twx-dt-image setup calls addAsset" time="0.018" classname="vuforia-angular twx-dt-image setup"/>
  <testcase name="vuforia-angular twx-dt-image setup calls addAsset in batch" time="0.011" classname="vuforia-angular twx-dt-image setup"/>
  <testcase name="vuforia-angular twx-dt-image watches transform properties position watches x" time="0.014" classname="vuforia-angular twx-dt-image watches"/>
  <testcase name="vuforia-angular twx-dt-image watches transform properties position watches y" time="0.014" classname="vuforia-angular twx-dt-image watches"/>
  <testcase name="vuforia-angular twx-dt-image watches transform properties position watches z" time="0.014" classname="vuforia-angular twx-dt-image watches"/>
  <testcase name="vuforia-angular twx-dt-image watches transform properties scale watches sx" time="0.015" classname="vuforia-angular twx-dt-image watches"/>
  <testcase name="vuforia-angular twx-dt-image watches transform properties scale watches sy" time="0.015" classname="vuforia-angular twx-dt-image watches"/>
  <testcase name="vuforia-angular twx-dt-image watches transform properties scale watches sz" time="0.014" classname="vuforia-angular twx-dt-image watches"/>
  <testcase name="vuforia-angular twx-dt-image watches transform properties rotation watches rx" time="0.016" classname="vuforia-angular twx-dt-image watches"/>
  <testcase name="vuforia-angular twx-dt-image watches transform properties rotation watches ry" time="0.015" classname="vuforia-angular twx-dt-image watches"/>
  <testcase name="vuforia-angular twx-dt-image watches transform properties rotation watches rz" time="0.017" classname="vuforia-angular twx-dt-image watches"/>
  <testcase name="vuforia-angular twx-dt-image watches transform properties rotation calls setRotation only once if all properties change in a single digest cycle." time="0.016" classname="vuforia-angular twx-dt-image watches"/>
  <testcase name="vuforia-angular twx-dt-image watches rendering properties watches billboard" time="0.014" classname="vuforia-angular twx-dt-image watches"/>
  <testcase name="vuforia-angular twx-dt-image watches rendering properties watches occlude" time="0.015" classname="vuforia-angular twx-dt-image watches"/>
  <testcase name="vuforia-angular twx-dt-image watches rendering properties watches hidden" time="0.015" classname="vuforia-angular twx-dt-image watches"/>
  <testcase name="vuforia-angular twx-dt-image watches rendering properties watches phantom" time="0.017" classname="vuforia-angular twx-dt-image watches"/>
  <testcase name="vuforia-angular twx-dt-image watches rendering properties watches opacity" time="0.016" classname="vuforia-angular twx-dt-image watches"/>
  <testcase name="vuforia-angular twx-dt-image watches rendering properties watches decal" time="0.015" classname="vuforia-angular twx-dt-image watches"/>
  <testcase name="vuforia-angular twx-dt-image watches rendering properties watches shader" time="0.014" classname="vuforia-angular twx-dt-image watches"/>
  <testcase name="vuforia-angular twx-dt-image watches rendering properties will set multiple properties in a single call" time="0.014" classname="vuforia-angular twx-dt-image watches"/>
  <testcase name="vuforia-angular twx-dt-image watches listens to src and builds a data url if the src ends with svg" time="0.029" classname="vuforia-angular twx-dt-image watches"/>
  <testcase name="vuforia-angular twx-dt-label setup label set up with minimal attributes calls addAsset" time="0.022" classname="vuforia-angular twx-dt-label setup"/>
  <testcase name="vuforia-angular twx-dt-label setup label set up with minimal attributes calls addAsset in batch" time="0.031" classname="vuforia-angular twx-dt-label setup"/>
  <testcase name="vuforia-angular twx-dt-label setup calls addAsset" time="0.02" classname="vuforia-angular twx-dt-label setup"/>
  <testcase name="vuforia-angular twx-dt-label setup calls addAsset in batch" time="0.011" classname="vuforia-angular twx-dt-label setup"/>
  <testcase name="vuforia-angular twx-dt-label watches transform properties position watches x" time="0.016" classname="vuforia-angular twx-dt-label watches"/>
  <testcase name="vuforia-angular twx-dt-label watches transform properties position watches y" time="0.016" classname="vuforia-angular twx-dt-label watches"/>
  <testcase name="vuforia-angular twx-dt-label watches transform properties position watches z" time="0.015" classname="vuforia-angular twx-dt-label watches"/>
  <testcase name="vuforia-angular twx-dt-label watches transform properties scale watches sx" time="0.016" classname="vuforia-angular twx-dt-label watches"/>
  <testcase name="vuforia-angular twx-dt-label watches transform properties scale watches sy" time="0.015" classname="vuforia-angular twx-dt-label watches"/>
  <testcase name="vuforia-angular twx-dt-label watches transform properties scale watches sz" time="0.016" classname="vuforia-angular twx-dt-label watches"/>
  <testcase name="vuforia-angular twx-dt-label watches transform properties rotation watches rx" time="0.019" classname="vuforia-angular twx-dt-label watches"/>
  <testcase name="vuforia-angular twx-dt-label watches transform properties rotation watches ry" time="0.016" classname="vuforia-angular twx-dt-label watches"/>
  <testcase name="vuforia-angular twx-dt-label watches transform properties rotation watches rz" time="0.016" classname="vuforia-angular twx-dt-label watches"/>
  <testcase name="vuforia-angular twx-dt-label watches transform properties rotation calls setRotation only once if all properties change in a single digest cycle." time="0.015" classname="vuforia-angular twx-dt-label watches"/>
  <testcase name="vuforia-angular twx-dt-label watches rendering properties watches billboard" time="0.026" classname="vuforia-angular twx-dt-label watches"/>
  <testcase name="vuforia-angular twx-dt-label watches rendering properties watches occlude" time="0.015" classname="vuforia-angular twx-dt-label watches"/>
  <testcase name="vuforia-angular twx-dt-label watches rendering properties watches hidden" time="0.015" classname="vuforia-angular twx-dt-label watches"/>
  <testcase name="vuforia-angular twx-dt-label watches rendering properties watches phantom" time="0.015" classname="vuforia-angular twx-dt-label watches"/>
  <testcase name="vuforia-angular twx-dt-label watches rendering properties watches opacity" time="0.015" classname="vuforia-angular twx-dt-label watches"/>
  <testcase name="vuforia-angular twx-dt-label watches rendering properties watches decal" time="0.018" classname="vuforia-angular twx-dt-label watches"/>
  <testcase name="vuforia-angular twx-dt-label watches rendering properties watches shader" time="0.016" classname="vuforia-angular twx-dt-label watches"/>
  <testcase name="vuforia-angular twx-dt-label watches rendering properties will set multiple properties in a single call" time="0.015" classname="vuforia-angular twx-dt-label watches"/>
  <testcase name="vuforia-angular twx-dt-label watches watches the text attribute" time="0.021" classname="vuforia-angular twx-dt-label watches"/>
  <testcase name="vuforia-angular twx-dt-modelitem when defined as a child element transform properties position watches x" time="0.03" classname="vuforia-angular twx-dt-modelitem"/>
  <testcase name="vuforia-angular twx-dt-modelitem when defined as a child element transform properties position watches y" time="0.018" classname="vuforia-angular twx-dt-modelitem"/>
  <testcase name="vuforia-angular twx-dt-modelitem when defined as a child element transform properties position watches z" time="0.016" classname="vuforia-angular twx-dt-modelitem"/>
  <testcase name="vuforia-angular twx-dt-modelitem when defined as a child element transform properties scale watches sx" time="0.017" classname="vuforia-angular twx-dt-modelitem"/>
  <testcase name="vuforia-angular twx-dt-modelitem when defined as a child element transform properties scale watches sy" time="0.02" classname="vuforia-angular twx-dt-modelitem"/>
  <testcase name="vuforia-angular twx-dt-modelitem when defined as a child element transform properties scale watches sz" time="0.041" classname="vuforia-angular twx-dt-modelitem"/>
  <testcase name="vuforia-angular twx-dt-modelitem when defined as a child element transform properties rotation watches rx" time="0.02" classname="vuforia-angular twx-dt-modelitem"/>
  <testcase name="vuforia-angular twx-dt-modelitem when defined as a child element transform properties rotation watches ry" time="0.017" classname="vuforia-angular twx-dt-modelitem"/>
  <testcase name="vuforia-angular twx-dt-modelitem when defined as a child element transform properties rotation watches rz" time="0.016" classname="vuforia-angular twx-dt-modelitem"/>
  <testcase name="vuforia-angular twx-dt-modelitem when defined as a child element transform properties rotation calls setRotation only once if all properties change in a single digest cycle." time="0.016" classname="vuforia-angular twx-dt-modelitem"/>
  <testcase name="vuforia-angular twx-dt-modelitem when defined as a child element rendering properties watches billboard" time="0.015" classname="vuforia-angular twx-dt-modelitem"/>
  <testcase name="vuforia-angular twx-dt-modelitem when defined as a child element rendering properties watches occlude" time="0.019" classname="vuforia-angular twx-dt-modelitem"/>
  <testcase name="vuforia-angular twx-dt-modelitem when defined as a child element rendering properties watches hidden" time="0.018" classname="vuforia-angular twx-dt-modelitem"/>
  <testcase name="vuforia-angular twx-dt-modelitem when defined as a child element rendering properties watches phantom" time="0.017" classname="vuforia-angular twx-dt-modelitem"/>
  <testcase name="vuforia-angular twx-dt-modelitem when defined as a child element rendering properties watches opacity" time="0.02" classname="vuforia-angular twx-dt-modelitem"/>
  <testcase name="vuforia-angular twx-dt-modelitem when defined as a child element rendering properties watches decal" time="0.022" classname="vuforia-angular twx-dt-modelitem"/>
  <testcase name="vuforia-angular twx-dt-modelitem when defined as a child element rendering properties watches shader" time="0.02" classname="vuforia-angular twx-dt-modelitem"/>
  <testcase name="vuforia-angular twx-dt-modelitem when defined as a child element rendering properties will set multiple properties in a single call" time="0.016" classname="vuforia-angular twx-dt-modelitem"/>
  <testcase name="vuforia-angular twx-dt-modelitem when defined as a peer element transform properties position watches x" time="0.015" classname="vuforia-angular twx-dt-modelitem"/>
  <testcase name="vuforia-angular twx-dt-modelitem when defined as a peer element transform properties position watches y" time="0.015" classname="vuforia-angular twx-dt-modelitem"/>
  <testcase name="vuforia-angular twx-dt-modelitem when defined as a peer element transform properties position watches z" time="0.017" classname="vuforia-angular twx-dt-modelitem"/>
  <testcase name="vuforia-angular twx-dt-modelitem when defined as a peer element transform properties scale watches sx" time="0.015" classname="vuforia-angular twx-dt-modelitem"/>
  <testcase name="vuforia-angular twx-dt-modelitem when defined as a peer element transform properties scale watches sy" time="0.016" classname="vuforia-angular twx-dt-modelitem"/>
  <testcase name="vuforia-angular twx-dt-modelitem when defined as a peer element transform properties scale watches sz" time="0.016" classname="vuforia-angular twx-dt-modelitem"/>
  <testcase name="vuforia-angular twx-dt-modelitem when defined as a peer element transform properties rotation watches rx" time="0.016" classname="vuforia-angular twx-dt-modelitem"/>
  <testcase name="vuforia-angular twx-dt-modelitem when defined as a peer element transform properties rotation watches ry" time="0.016" classname="vuforia-angular twx-dt-modelitem"/>
  <testcase name="vuforia-angular twx-dt-modelitem when defined as a peer element transform properties rotation watches rz" time="0.018" classname="vuforia-angular twx-dt-modelitem"/>
  <testcase name="vuforia-angular twx-dt-modelitem when defined as a peer element transform properties rotation calls setRotation only once if all properties change in a single digest cycle." time="0.016" classname="vuforia-angular twx-dt-modelitem"/>
  <testcase name="vuforia-angular twx-dt-modelitem when defined as a peer element rendering properties watches billboard" time="0.016" classname="vuforia-angular twx-dt-modelitem"/>
  <testcase name="vuforia-angular twx-dt-modelitem when defined as a peer element rendering properties watches occlude" time="0.015" classname="vuforia-angular twx-dt-modelitem"/>
  <testcase name="vuforia-angular twx-dt-modelitem when defined as a peer element rendering properties watches hidden" time="0.015" classname="vuforia-angular twx-dt-modelitem"/>
  <testcase name="vuforia-angular twx-dt-modelitem when defined as a peer element rendering properties watches phantom" time="0.015" classname="vuforia-angular twx-dt-modelitem"/>
  <testcase name="vuforia-angular twx-dt-modelitem when defined as a peer element rendering properties watches opacity" time="0.021" classname="vuforia-angular twx-dt-modelitem"/>
  <testcase name="vuforia-angular twx-dt-modelitem when defined as a peer element rendering properties watches decal" time="0.016" classname="vuforia-angular twx-dt-modelitem"/>
  <testcase name="vuforia-angular twx-dt-modelitem when defined as a peer element rendering properties watches shader" time="0.017" classname="vuforia-angular twx-dt-modelitem"/>
  <testcase name="vuforia-angular twx-dt-modelitem when defined as a peer element rendering properties will set multiple properties in a single call" time="0.016" classname="vuforia-angular twx-dt-modelitem"/>
  <testcase name="vuforia-angular twx-dt-model setup model set up with minimal attributes" time="0.004" classname="vuforia-angular twx-dt-model setup"/>
  <testcase name="vuforia-angular twx-dt-model setup model setup with cull attribute model set up with cull attribute set to true calls addAsset" time="0.03" classname="vuforia-angular twx-dt-model setup"/>
  <testcase name="vuforia-angular twx-dt-model setup model setup with cull attribute model set up with cull attribute set to true calls addAsset in batch" time="0.013" classname="vuforia-angular twx-dt-model setup"/>
  <testcase name="vuforia-angular twx-dt-model setup model setup with cull attribute model set up with cull attribute set to false calls addAsset" time="0.019" classname="vuforia-angular twx-dt-model setup"/>
  <testcase name="vuforia-angular twx-dt-model setup model setup with cull attribute model set up with cull attribute set to false calls addAsset in batch" time="0.01" classname="vuforia-angular twx-dt-model setup"/>
  <testcase name="vuforia-angular twx-dt-model setup model setup with cull attribute model set up with cull attribute not set calls addAsset" time="0.018" classname="vuforia-angular twx-dt-model setup"/>
  <testcase name="vuforia-angular twx-dt-model setup model setup with cull attribute model set up with cull attribute not set calls addAsset in batch" time="0.011" classname="vuforia-angular twx-dt-model setup"/>
  <testcase name="vuforia-angular twx-dt-model with sequence sets steps, currentStep, playing appropriately on twx-dt-model's scope's me object" time="0.076" classname="vuforia-angular twx-dt-model with sequence"/>
  <testcase name="vuforia-angular twx-dt-model with sequence emits playstarted, newStep, playstopped events when play() is called." time="1.072" classname="vuforia-angular twx-dt-model with sequence"/>
  <testcase name="vuforia-angular twx-dt-model with sequence emits playstarted, newStep, playstopped events when playAll() is called." time="5.416" classname="vuforia-angular twx-dt-model with sequence"/>
  <testcase name="vuforia-angular twx-dt-model with sequence appropriately resets when changing sequences." time="10.46" classname="vuforia-angular twx-dt-model with sequence"/>
  <testcase name="vuforia-angular twx-dt-model with sequence goes directly to steps." time="0.115" classname="vuforia-angular twx-dt-model with sequence"/>
  <testcase name="vuforia-angular twx-dt-model with sequence allows navigation forward" time="0.122" classname="vuforia-angular twx-dt-model with sequence"/>
  <testcase name="vuforia-angular twx-dt-model with sequence allows navigation backwards" time="0.16" classname="vuforia-angular twx-dt-model with sequence"/>
  <testcase name="vuforia-angular twx-dt-model transform properties position watches x" time="0.015" classname="vuforia-angular twx-dt-model"/>
  <testcase name="vuforia-angular twx-dt-model transform properties position watches y" time="0.015" classname="vuforia-angular twx-dt-model"/>
  <testcase name="vuforia-angular twx-dt-model transform properties position watches z" time="0.015" classname="vuforia-angular twx-dt-model"/>
  <testcase name="vuforia-angular twx-dt-model transform properties scale watches sx" time="0.015" classname="vuforia-angular twx-dt-model"/>
  <testcase name="vuforia-angular twx-dt-model transform properties scale watches sy" time="0.015" classname="vuforia-angular twx-dt-model"/>
  <testcase name="vuforia-angular twx-dt-model transform properties scale watches sz" time="0.015" classname="vuforia-angular twx-dt-model"/>
  <testcase name="vuforia-angular twx-dt-model transform properties rotation watches rx" time="0.015" classname="vuforia-angular twx-dt-model"/>
  <testcase name="vuforia-angular twx-dt-model transform properties rotation watches ry" time="0.014" classname="vuforia-angular twx-dt-model"/>
  <testcase name="vuforia-angular twx-dt-model transform properties rotation watches rz" time="0.018" classname="vuforia-angular twx-dt-model"/>
  <testcase name="vuforia-angular twx-dt-model transform properties rotation calls setRotation only once if all properties change in a single digest cycle." time="0.017" classname="vuforia-angular twx-dt-model"/>
  <testcase name="vuforia-angular twx-dt-model rendering properties watches billboard" time="0.014" classname="vuforia-angular twx-dt-model"/>
  <testcase name="vuforia-angular twx-dt-model rendering properties watches occlude" time="0.014" classname="vuforia-angular twx-dt-model"/>
  <testcase name="vuforia-angular twx-dt-model rendering properties watches hidden" time="0.014" classname="vuforia-angular twx-dt-model"/>
  <testcase name="vuforia-angular twx-dt-model rendering properties watches phantom" time="0.015" classname="vuforia-angular twx-dt-model"/>
  <testcase name="vuforia-angular twx-dt-model rendering properties watches opacity" time="0.014" classname="vuforia-angular twx-dt-model"/>
  <testcase name="vuforia-angular twx-dt-model rendering properties watches decal" time="0.014" classname="vuforia-angular twx-dt-model"/>
  <testcase name="vuforia-angular twx-dt-model rendering properties watches shader" time="0.013" classname="vuforia-angular twx-dt-model"/>
  <testcase name="vuforia-angular twx-dt-model rendering properties will set multiple properties in a single call" time="0.014" classname="vuforia-angular twx-dt-model"/>
  <testcase name="vuforia-angular multiple twx-dt-labels watches should only update label-02 when only label-02 changes" time="0.016" classname="vuforia-angular multiple twx-dt-labels watches"/>
  <testcase name="vuforia-angular multiple twx-dt-labels watches should update both label-02 and label-01 when both change in the same digest cycle" time="0.015" classname="vuforia-angular multiple twx-dt-labels watches"/>
  <testcase name="vuforia-angular twx-dt-sensor setup sensor set up with minimal attributes" time="0.003" classname="vuforia-angular twx-dt-sensor setup"/>
  <testcase name="vuforia-angular twx-dt-sensor setup sensor set up with png calls addAsset" time="2.036" classname="vuforia-angular twx-dt-sensor setup"/>
  <testcase name="vuforia-angular twx-dt-sensor setup sensor set up with png calls addAsset in batch" time="2.024" classname="vuforia-angular twx-dt-sensor setup"/>
  <testcase name="vuforia-angular twx-dt-sensor setup sensor set up with svg calls addAsset" time="1.022" classname="vuforia-angular twx-dt-sensor setup"/>
  <testcase name="vuforia-angular twx-dt-sensor setup sensor set up with svg calls addAsset in batch" time="1.01" classname="vuforia-angular twx-dt-sensor setup"/>
  <testcase name="vuforia-angular twx-dt-sensor setup calls addAsset" time="2.037" classname="vuforia-angular twx-dt-sensor setup"/>
  <testcase name="vuforia-angular twx-dt-sensor setup calls addAsset in batch" time="2.024" classname="vuforia-angular twx-dt-sensor setup"/>
  <testcase name="vuforia-angular twx-dt-sensor watches transform properties position watches x" time="0.078" classname="vuforia-angular twx-dt-sensor watches"/>
  <testcase name="vuforia-angular twx-dt-sensor watches transform properties position watches y" time="0.023" classname="vuforia-angular twx-dt-sensor watches"/>
  <testcase name="vuforia-angular twx-dt-sensor watches transform properties position watches z" time="0.023" classname="vuforia-angular twx-dt-sensor watches"/>
  <testcase name="vuforia-angular twx-dt-sensor watches transform properties scale watches sx" time="0.023" classname="vuforia-angular twx-dt-sensor watches"/>
  <testcase name="vuforia-angular twx-dt-sensor watches transform properties scale watches sy" time="0.024" classname="vuforia-angular twx-dt-sensor watches"/>
  <testcase name="vuforia-angular twx-dt-sensor watches transform properties scale watches sz" time="0.024" classname="vuforia-angular twx-dt-sensor watches"/>
  <testcase name="vuforia-angular twx-dt-sensor watches transform properties rotation watches rx" time="0.025" classname="vuforia-angular twx-dt-sensor watches"/>
  <testcase name="vuforia-angular twx-dt-sensor watches transform properties rotation watches ry" time="0.022" classname="vuforia-angular twx-dt-sensor watches"/>
  <testcase name="vuforia-angular twx-dt-sensor watches transform properties rotation watches rz" time="0.022" classname="vuforia-angular twx-dt-sensor watches"/>
  <testcase name="vuforia-angular twx-dt-sensor watches transform properties rotation calls setRotation only once if all properties change in a single digest cycle." time="0.023" classname="vuforia-angular twx-dt-sensor watches"/>
  <testcase name="vuforia-angular twx-dt-sensor watches rendering properties watches billboard" time="0.023" classname="vuforia-angular twx-dt-sensor watches"/>
  <testcase name="vuforia-angular twx-dt-sensor watches rendering properties watches occlude" time="0.023" classname="vuforia-angular twx-dt-sensor watches"/>
  <testcase name="vuforia-angular twx-dt-sensor watches rendering properties watches hidden" time="0.022" classname="vuforia-angular twx-dt-sensor watches"/>
  <testcase name="vuforia-angular twx-dt-sensor watches rendering properties watches phantom" time="0.024" classname="vuforia-angular twx-dt-sensor watches"/>
  <testcase name="vuforia-angular twx-dt-sensor watches rendering properties watches opacity" time="0.023" classname="vuforia-angular twx-dt-sensor watches"/>
  <testcase name="vuforia-angular twx-dt-sensor watches rendering properties watches decal" time="0.035" classname="vuforia-angular twx-dt-sensor watches"/>
  <testcase name="vuforia-angular twx-dt-sensor watches rendering properties watches shader" time="0.023" classname="vuforia-angular twx-dt-sensor watches"/>
  <testcase name="vuforia-angular twx-dt-sensor watches rendering properties will set multiple properties in a single call" time="0.023" classname="vuforia-angular twx-dt-sensor watches"/>
  <testcase name="vuforia-angular twx-dt-sensor watches watches the src attribute and asynchronously downloads the image" time="0.037" classname="vuforia-angular twx-dt-sensor watches"/>
  <testcase name="vuforia-angular twx-dt-sensor watches watches the canvaswidth attribute" time="0.023" classname="vuforia-angular twx-dt-sensor watches"/>
  <testcase name="vuforia-angular twx-dt-sensor watches watches the canvasheight attribute" time="0.024" classname="vuforia-angular twx-dt-sensor watches"/>
  <testcase name="vuforia-angular twx-dt-sensor watches watches the canvasgrowthoverride attribute" time="0.045" classname="vuforia-angular twx-dt-sensor watches"/>
  <testcase name="vuforia-angular twx-dt-sensor watches watches the text attribute" time="0.023" classname="vuforia-angular twx-dt-sensor watches"/>
  <testcase name="vuforia-angular twx-dt-sensor watches watches the textattrs attribute" time="0.029" classname="vuforia-angular twx-dt-sensor watches"/>
  <testcase name="vuforia-angular twx-dt-sensor watches watches the imageattrs attribute" time="0.026" classname="vuforia-angular twx-dt-sensor watches"/>
  <testcase name="vuforia-angular twx-dt-sensor watches watches the textx attribute" time="0.024" classname="vuforia-angular twx-dt-sensor watches"/>
  <testcase name="vuforia-angular twx-dt-sensor watches watches the texty attribute" time="0.027" classname="vuforia-angular twx-dt-sensor watches"/>
  <testcase name="vuforia-angular twx-dt-sensor watches watches the imagex attribute" time="0.025" classname="vuforia-angular twx-dt-sensor watches"/>
  <testcase name="vuforia-angular twx-dt-sensor watches watches the imagey attribute" time="0.027" classname="vuforia-angular twx-dt-sensor watches"/>
  <testcase name="vuforia-angular twx-dt-sensor watches only calls setTexture once per digest, even if multiple attrs change" time="0.127" classname="vuforia-angular twx-dt-sensor watches"/>
  <testcase name="vuforia-angular twx-dt-svg setup svg set up with minimal attributes calls addAsset" time="0.023" classname="vuforia-angular twx-dt-svg setup"/>
  <testcase name="vuforia-angular twx-dt-svg setup svg set up with minimal attributes calls addAsset in batch" time="0.046" classname="vuforia-angular twx-dt-svg setup"/>
  <testcase name="vuforia-angular twx-dt-svg setup svg set up with explicit canvas size calls addAsset" time="0.021" classname="vuforia-angular twx-dt-svg setup"/>
  <testcase name="vuforia-angular twx-dt-svg setup svg set up with explicit canvas size calls addAsset in batch" time="0.009" classname="vuforia-angular twx-dt-svg setup"/>
  <testcase name="vuforia-angular twx-dt-target watches does not watch size when size was not specified in the initial TML" time="0.013" classname="vuforia-angular twx-dt-target watches"/>
  <testcase name="vuforia-angular twx-dt-target watches does not watch size when size was specified as empty string in the initial TML" time="0.012" classname="vuforia-angular twx-dt-target watches"/>
  <testcase name="vuforia-angular twx-dt-target watches does not watch size when size was specified but has no value in the initial TML" time="0.012" classname="vuforia-angular twx-dt-target watches"/>
  <testcase name="vuforia-angular twx-dt-target watches does not watch size when size was specified as Infinity in the initial TML" time="0.012" classname="vuforia-angular twx-dt-target watches"/>
  <testcase name="vuforia-angular twx-dt-target watches does not watch size when size was specified but is not a number in the initial TML" time="0.013" classname="vuforia-angular twx-dt-target watches"/>
  <testcase name="vuforia-angular twx-dt-target watches watches size when size was specified in the initial TML" time="0.016" classname="vuforia-angular twx-dt-target watches"/>
  <testcase name="vuforia-angular twx-dt-target watches calls setScale for target1 when target1's size changes" time="0.013" classname="vuforia-angular twx-dt-target watches"/>
  <testcase name="vuforia-angular twx-dt-target watches calls setScale for target2 when target2's size changes" time="0.013" classname="vuforia-angular twx-dt-target watches"/>
  <testcase name="vuforia-angular twx-dt-target watches does not call setScale when an invalid size is set" time="0.013" classname="vuforia-angular twx-dt-target watches"/>
  <testcase name="vuforia-angular twx-dt-target watches passes tracking hints on appropriately" time="0.013" classname="vuforia-angular twx-dt-target watches"/>
  <system-out>
    <![CDATA[PhantomJS 2.1.1 (Linux 0.0.0) WARN: 'TML layer asked to emit an event with no name!'
,PhantomJS 2.1.1 (Linux 0.0.0) LOG: 'twx-dt-view tag is removed from DOM.'
,PhantomJS 2.1.1 (Linux 0.0.0) LOG: 'event [trackingacquired] broadcast on rootScope and dispatched against domID [target-01] with type [twx-dt-target], targetName [5:4] and data [undefined]'
,PhantomJS 2.1.1 (Linux 0.0.0) LOG: 'twx-dt-view tag is removed from DOM.'
,PhantomJS 2.1.1 (Linux 0.0.0) LOG: 'event [trackingacquired] broadcast on rootScope and dispatched against domID [target-01] with type [twx-dt-target], targetName [5:4] and data [undefined]'
,PhantomJS 2.1.1 (Linux 0.0.0) LOG: 'twx-dt-view tag is removed from DOM.'
,PhantomJS 2.1.1 (Linux 0.0.0) LOG: 'event [custom_event] broadcast on rootScope and dispatched against domID [ar_events_tests] with type [twx-dt-target], targetName [5:3] and data [undefined]'
,PhantomJS 2.1.1 (Linux 0.0.0) LOG: 'twx-dt-view tag is removed from DOM.'
,PhantomJS 2.1.1 (Linux 0.0.0) WARN: 'TML layer was given event data for [custom_event] that could not be parsed as json. evtData is: '
,PhantomJS 2.1.1 (Linux 0.0.0) WARN: 'this is not valid json'
,PhantomJS 2.1.1 (Linux 0.0.0) LOG: 'event [custom_event] broadcast on rootScope and dispatched against domID [ar_events_tests] with type [twx-dt-view], targetName [ar_events_tests] and data [this is not valid json]'
,PhantomJS 2.1.1 (Linux 0.0.0) LOG: 'twx-dt-view tag is removed from DOM.'
,PhantomJS 2.1.1 (Linux 0.0.0) LOG: 'event [custom_event] broadcast on rootScope and dispatched against domID [target-01] with type [twx-dt-target], targetName [5:4] and data [{"name":"test","number":4,"abool":true,"arr":[1,2,3],"subObject":{"contains":"a string"}}]'
,PhantomJS 2.1.1 (Linux 0.0.0) LOG: 'twx-dt-view tag is removed from DOM.'
,PhantomJS 2.1.1 (Linux 0.0.0) LOG: 'event [custom_event] broadcast on rootScope and dispatched against domID [target-01] with type [twx-dt-target], targetName [5:4] and data [{"name":"test","number":4,"abool":true,"arr":[1,2,3],"subObject":{"contains":"a string"}}]'
,PhantomJS 2.1.1 (Linux 0.0.0) LOG: 'twx-dt-view tag is removed from DOM.'
,PhantomJS 2.1.1 (Linux 0.0.0) LOG: 'firing trackingacquired via $rootScope and domID [target-01] for target [5:4]'
,PhantomJS 2.1.1 (Linux 0.0.0) LOG: 'twx-dt-view tag is removed from DOM.'
,PhantomJS 2.1.1 (Linux 0.0.0) LOG: 'firing trackingacquired via $rootScope and domID [target-01] for target [5:4]'
,PhantomJS 2.1.1 (Linux 0.0.0) LOG: 'skipping drawing the empty string: [', undefined, ']'
,PhantomJS 2.1.1 (Linux 0.0.0) LOG: 'skipping drawing the empty string: [', undefined, ']'
,PhantomJS 2.1.1 (Linux 0.0.0) LOG: 'setting initial model data'
,PhantomJS 2.1.1 (Linux 0.0.0) LOG: 'skipping initial sequence watch invocation when there is no sequence to set.'
,PhantomJS 2.1.1 (Linux 0.0.0) LOG: 'setting initial model data'
,PhantomJS 2.1.1 (Linux 0.0.0) LOG: 'skipping initial sequence watch invocation when there is no sequence to set.'
,PhantomJS 2.1.1 (Linux 0.0.0) LOG: 'setting initial model data'
,PhantomJS 2.1.1 (Linux 0.0.0) LOG: 'skipping initial sequence watch invocation when there is no sequence to set.'
,PhantomJS 2.1.1 (Linux 0.0.0) LOG: 'setting initial model data'
,PhantomJS 2.1.1 (Linux 0.0.0) LOG: 'skipping initial sequence watch invocation when there is no sequence to set.'
,PhantomJS 2.1.1 (Linux 0.0.0) LOG: 'setting initial model data'
,PhantomJS 2.1.1 (Linux 0.0.0) LOG: 'skipping initial sequence watch invocation when there is no sequence to set.'
,PhantomJS 2.1.1 (Linux 0.0.0) LOG: 'setting initial model data'
,PhantomJS 2.1.1 (Linux 0.0.0) LOG: 'skipping initial sequence watch invocation when there is no sequence to set.'
,PhantomJS 2.1.1 (Linux 0.0.0) LOG: 'setting initial model data'
,PhantomJS 2.1.1 (Linux 0.0.0) LOG: 'skipping initial sequence watch invocation when there is no sequence to set.'
,PhantomJS 2.1.1 (Linux 0.0.0) LOG: 'setting initial model data'
,PhantomJS 2.1.1 (Linux 0.0.0) LOG: 'skipping initial sequence watch invocation when there is no sequence to set.'
,PhantomJS 2.1.1 (Linux 0.0.0) LOG: 'setting initial model data'
,PhantomJS 2.1.1 (Linux 0.0.0) LOG: 'skipping initial sequence watch invocation when there is no sequence to set.'
,PhantomJS 2.1.1 (Linux 0.0.0) LOG: 'setting initial model data'
,PhantomJS 2.1.1 (Linux 0.0.0) LOG: 'skipping initial sequence watch invocation when there is no sequence to set.'
,PhantomJS 2.1.1 (Linux 0.0.0) LOG: 'setting initial model data'
,PhantomJS 2.1.1 (Linux 0.0.0) LOG: 'skipping initial sequence watch invocation when there is no sequence to set.'
,PhantomJS 2.1.1 (Linux 0.0.0) LOG: 'setting initial model data'
,PhantomJS 2.1.1 (Linux 0.0.0) LOG: 'skipping initial sequence watch invocation when there is no sequence to set.'
,PhantomJS 2.1.1 (Linux 0.0.0) LOG: 'setting initial model data'
,PhantomJS 2.1.1 (Linux 0.0.0) LOG: 'skipping initial sequence watch invocation when there is no sequence to set.'
,PhantomJS 2.1.1 (Linux 0.0.0) LOG: 'setting initial model data'
,PhantomJS 2.1.1 (Linux 0.0.0) LOG: 'skipping initial sequence watch invocation when there is no sequence to set.'
,PhantomJS 2.1.1 (Linux 0.0.0) LOG: 'setting initial model data'
,PhantomJS 2.1.1 (Linux 0.0.0) LOG: 'skipping initial sequence watch invocation when there is no sequence to set.'
,PhantomJS 2.1.1 (Linux 0.0.0) LOG: 'setting initial model data'
,PhantomJS 2.1.1 (Linux 0.0.0) LOG: 'skipping initial sequence watch invocation when there is no sequence to set.'
,PhantomJS 2.1.1 (Linux 0.0.0) LOG: 'setting initial model data'
,PhantomJS 2.1.1 (Linux 0.0.0) LOG: 'skipping initial sequence watch invocation when there is no sequence to set.'
,PhantomJS 2.1.1 (Linux 0.0.0) LOG: 'setting initial model data'
,PhantomJS 2.1.1 (Linux 0.0.0) LOG: 'skipping initial sequence watch invocation when there is no sequence to set.'
,PhantomJS 2.1.1 (Linux 0.0.0) LOG: 'setting initial model data'
,PhantomJS 2.1.1 (Linux 0.0.0) LOG: 'skipping initial sequence watch invocation when there is no sequence to set.'
,PhantomJS 2.1.1 (Linux 0.0.0) LOG: 'setting initial model data'
,PhantomJS 2.1.1 (Linux 0.0.0) LOG: 'skipping initial sequence watch invocation when there is no sequence to set.'
,PhantomJS 2.1.1 (Linux 0.0.0) LOG: 'setting initial model data'
,PhantomJS 2.1.1 (Linux 0.0.0) LOG: 'skipping initial sequence watch invocation when there is no sequence to set.'
,PhantomJS 2.1.1 (Linux 0.0.0) LOG: 'setting initial model data'
,PhantomJS 2.1.1 (Linux 0.0.0) LOG: 'skipping initial sequence watch invocation when there is no sequence to set.'
,PhantomJS 2.1.1 (Linux 0.0.0) LOG: 'setting initial model data'
,PhantomJS 2.1.1 (Linux 0.0.0) LOG: 'skipping initial sequence watch invocation when there is no sequence to set.'
,PhantomJS 2.1.1 (Linux 0.0.0) LOG: 'setting initial model data'
,PhantomJS 2.1.1 (Linux 0.0.0) LOG: 'skipping initial sequence watch invocation when there is no sequence to set.'
,PhantomJS 2.1.1 (Linux 0.0.0) LOG: 'setting initial model data'
,PhantomJS 2.1.1 (Linux 0.0.0) LOG: 'skipping initial sequence watch invocation when there is no sequence to set.'
,PhantomJS 2.1.1 (Linux 0.0.0) LOG: 'setting initial model data'
,PhantomJS 2.1.1 (Linux 0.0.0) LOG: 'skipping initial sequence watch invocation when there is no sequence to set.'
,PhantomJS 2.1.1 (Linux 0.0.0) LOG: 'setting initial model data'
,PhantomJS 2.1.1 (Linux 0.0.0) LOG: 'skipping initial sequence watch invocation when there is no sequence to set.'
,PhantomJS 2.1.1 (Linux 0.0.0) LOG: 'setting initial model data'
,PhantomJS 2.1.1 (Linux 0.0.0) LOG: 'skipping initial sequence watch invocation when there is no sequence to set.'
,PhantomJS 2.1.1 (Linux 0.0.0) LOG: 'setting initial model data'
,PhantomJS 2.1.1 (Linux 0.0.0) LOG: 'skipping initial sequence watch invocation when there is no sequence to set.'
,PhantomJS 2.1.1 (Linux 0.0.0) LOG: 'setting initial model data'
,PhantomJS 2.1.1 (Linux 0.0.0) LOG: 'skipping initial sequence watch invocation when there is no sequence to set.'
,PhantomJS 2.1.1 (Linux 0.0.0) LOG: 'setting initial model data'
,PhantomJS 2.1.1 (Linux 0.0.0) LOG: 'skipping initial sequence watch invocation when there is no sequence to set.'
,PhantomJS 2.1.1 (Linux 0.0.0) LOG: 'setting initial model data'
,PhantomJS 2.1.1 (Linux 0.0.0) LOG: 'skipping initial sequence watch invocation when there is no sequence to set.'
,PhantomJS 2.1.1 (Linux 0.0.0) LOG: 'setting initial model data'
,PhantomJS 2.1.1 (Linux 0.0.0) LOG: 'skipping initial sequence watch invocation when there is no sequence to set.'
,PhantomJS 2.1.1 (Linux 0.0.0) LOG: 'setting initial model data'
,PhantomJS 2.1.1 (Linux 0.0.0) LOG: 'skipping initial sequence watch invocation when there is no sequence to set.'
,PhantomJS 2.1.1 (Linux 0.0.0) LOG: 'setting initial model data'
,PhantomJS 2.1.1 (Linux 0.0.0) LOG: 'skipping initial sequence watch invocation when there is no sequence to set.'
,PhantomJS 2.1.1 (Linux 0.0.0) LOG: 'setting initial model data'
,PhantomJS 2.1.1 (Linux 0.0.0) LOG: 'skipping initial sequence watch invocation when there is no sequence to set.'
,PhantomJS 2.1.1 (Linux 0.0.0) LOG: 'skipping initial sequence watch invocation when there is no sequence to set.'
,PhantomJS 2.1.1 (Linux 0.0.0) LOG: 'skipping initial sequence watch invocation when there is no sequence to set.'
,PhantomJS 2.1.1 (Linux 0.0.0) LOG: 'skipping initial sequence watch invocation when there is no sequence to set.'
,PhantomJS 2.1.1 (Linux 0.0.0) LOG: 'skipping initial sequence watch invocation when there is no sequence to set.'
,PhantomJS 2.1.1 (Linux 0.0.0) LOG: 'skipping initial sequence watch invocation when there is no sequence to set.'
,PhantomJS 2.1.1 (Linux 0.0.0) LOG: 'skipping initial sequence watch invocation when there is no sequence to set.'
,PhantomJS 2.1.1 (Linux 0.0.0) LOG: 'setting initial model data'
,PhantomJS 2.1.1 (Linux 0.0.0) LOG: 'reloading model data'
,PhantomJS 2.1.1 (Linux 0.0.0) LOG: 'setting initial model data'
,PhantomJS 2.1.1 (Linux 0.0.0) LOG: 'reloading model data'
,PhantomJS 2.1.1 (Linux 0.0.0) LOG: 'event [stepstarted] broadcast on rootScope and dispatched against domID [model-1] with type [null], targetName [model-1] and data [{"stepNumber":1,"stepName":"Step 1","totalSteps":4}]'
,PhantomJS 2.1.1 (Linux 0.0.0) LOG: 'event [stepcompleted] broadcast on rootScope and dispatched against domID [model-1] with type [null], targetName [model-1] and data [{"stepNumber":1,"stepName":"Step 1","acknowledge":false,"acknowledgeMessage":"You have reached the end of the step: Step 1","nextStep":2,"totalSteps":4}]'
,PhantomJS 2.1.1 (Linux 0.0.0) LOG: 'setting initial model data'
,PhantomJS 2.1.1 (Linux 0.0.0) LOG: 'reloading model data'
,PhantomJS 2.1.1 (Linux 0.0.0) LOG: 'event [stepstarted] broadcast on rootScope and dispatched against domID [model-1] with type [null], targetName [model-1] and data [{"stepNumber":1,"stepName":"Step 1","totalSteps":4}]'
,PhantomJS 2.1.1 (Linux 0.0.0) LOG: 'event [stepcompleted] broadcast on rootScope and dispatched against domID [model-1] with type [null], targetName [model-1] and data [{"stepNumber":1,"stepName":"Step 1","acknowledge":false,"acknowledgeMessage":"You have reached the end of the step: Step 1","nextStep":2,"totalSteps":4}]'
,PhantomJS 2.1.1 (Linux 0.0.0) LOG: 'event [stepstarted] broadcast on rootScope and dispatched against domID [model-1] with type [null], targetName [model-1] and data [{"stepNumber":2,"stepName":"Step 2","totalSteps":4}]'
,PhantomJS 2.1.1 (Linux 0.0.0) LOG: 'event [stepcompleted] broadcast on rootScope and dispatched against domID [model-1] with type [null], targetName [model-1] and data [{"stepNumber":2,"stepName":"Step 2","acknowledge":false,"acknowledgeMessage":"You have reached the end of the step: Step 2","nextStep":3,"totalSteps":4}]'
,PhantomJS 2.1.1 (Linux 0.0.0) LOG: 'event [stepstarted] broadcast on rootScope and dispatched against domID [model-1] with type [null], targetName [model-1] and data [{"stepNumber":3,"stepName":"Step 3","totalSteps":4}]'
,PhantomJS 2.1.1 (Linux 0.0.0) LOG: 'event [stepcompleted] broadcast on rootScope and dispatched against domID [model-1] with type [null], targetName [model-1] and data [{"stepNumber":3,"stepName":"Step 3","acknowledge":false,"acknowledgeMessage":"You have reached the end of the step: Step 3","nextStep":4,"totalSteps":4}]'
,PhantomJS 2.1.1 (Linux 0.0.0) LOG: 'event [stepstarted] broadcast on rootScope and dispatched against domID [model-1] with type [null], targetName [model-1] and data [{"stepNumber":4,"stepName":"Step 4","totalSteps":4}]'
,PhantomJS 2.1.1 (Linux 0.0.0) LOG: 'event [stepcompleted] broadcast on rootScope and dispatched against domID [model-1] with type [null], targetName [model-1] and data [{"stepNumber":4,"stepName":"Step 4","acknowledge":false,"acknowledgeMessage":"You have reached the end of the step: Step 4","nextStep":-1,"totalSteps":4}]'
,PhantomJS 2.1.1 (Linux 0.0.0) LOG: 'setting initial model data'
,PhantomJS 2.1.1 (Linux 0.0.0) LOG: 'reloading model data'
,PhantomJS 2.1.1 (Linux 0.0.0) LOG: 'reloading model data'
,PhantomJS 2.1.1 (Linux 0.0.0) LOG: 'event [stepstarted] broadcast on rootScope and dispatched against domID [model-1] with type [null], targetName [model-1] and data [{"stepNumber":1,"stepName":"Step 1","totalSteps":4}]'
,PhantomJS 2.1.1 (Linux 0.0.0) LOG: 'event [stepcompleted] broadcast on rootScope and dispatched against domID [model-1] with type [null], targetName [model-1] and data [{"stepNumber":1,"stepName":"Step 1","acknowledge":false,"acknowledgeMessage":"You have reached the end of the step: Step 1","nextStep":2,"totalSteps":4}]'
,PhantomJS 2.1.1 (Linux 0.0.0) LOG: 'event [stepstarted] broadcast on rootScope and dispatched against domID [model-1] with type [null], targetName [model-1] and data [{"stepNumber":2,"stepName":"Step 2","totalSteps":4}]'
,PhantomJS 2.1.1 (Linux 0.0.0) LOG: 'event [stepcompleted] broadcast on rootScope and dispatched against domID [model-1] with type [null], targetName [model-1] and data [{"stepNumber":2,"stepName":"Step 2","acknowledge":false,"acknowledgeMessage":"You have reached the end of the step: Step 2","nextStep":3,"totalSteps":4}]'
,PhantomJS 2.1.1 (Linux 0.0.0) LOG: 'event [stepstarted] broadcast on rootScope and dispatched against domID [model-1] with type [null], targetName [model-1] and data [{"stepNumber":3,"stepName":"Step 3","totalSteps":4}]'
,PhantomJS 2.1.1 (Linux 0.0.0) LOG: 'event [stepcompleted] broadcast on rootScope and dispatched against domID [model-1] with type [null], targetName [model-1] and data [{"stepNumber":3,"stepName":"Step 3","acknowledge":false,"acknowledgeMessage":"You have reached the end of the step: Step 3","nextStep":4,"totalSteps":4}]'
,PhantomJS 2.1.1 (Linux 0.0.0) LOG: 'event [stepstarted] broadcast on rootScope and dispatched against domID [model-1] with type [null], targetName [model-1] and data [{"stepNumber":4,"stepName":"Step 4","totalSteps":4}]'
,PhantomJS 2.1.1 (Linux 0.0.0) LOG: 'event [stepcompleted] broadcast on rootScope and dispatched against domID [model-1] with type [null], targetName [model-1] and data [{"stepNumber":4,"stepName":"Step 4","acknowledge":false,"acknowledgeMessage":"You have reached the end of the step: Step 4","nextStep":-1,"totalSteps":4}]'
,PhantomJS 2.1.1 (Linux 0.0.0) LOG: 'setting initial model data'
,PhantomJS 2.1.1 (Linux 0.0.0) LOG: 'reloading model data'
,PhantomJS 2.1.1 (Linux 0.0.0) LOG: 'now on step [1] targetting [3]'
,PhantomJS 2.1.1 (Linux 0.0.0) LOG: 'going to the next step.'
,PhantomJS 2.1.1 (Linux 0.0.0) LOG: 'now on step [2] targetting [3]'
,PhantomJS 2.1.1 (Linux 0.0.0) LOG: 'going to the next step.'
,PhantomJS 2.1.1 (Linux 0.0.0) LOG: 'now on step [3] targetting [3]'
,PhantomJS 2.1.1 (Linux 0.0.0) LOG: 'event [stepcompleted] broadcast on rootScope and dispatched against domID [model-1] with type [null], targetName [model-1] and data [{"stepNumber":3,"stepName":"Step 3","nextStep":3,"totalSteps":4}]'
,PhantomJS 2.1.1 (Linux 0.0.0) LOG: 'now on step [3] targetting [1]'
,PhantomJS 2.1.1 (Linux 0.0.0) LOG: 'going to the previous step.'
,PhantomJS 2.1.1 (Linux 0.0.0) LOG: 'now on step [2] targetting [1]'
,PhantomJS 2.1.1 (Linux 0.0.0) LOG: 'going to the previous step.'
,PhantomJS 2.1.1 (Linux 0.0.0) LOG: 'now on step [1] targetting [1]'
,PhantomJS 2.1.1 (Linux 0.0.0) LOG: 'event [stepcompleted] broadcast on rootScope and dispatched against domID [model-1] with type [null], targetName [model-1] and data [{"stepNumber":1,"stepName":"Step 1","nextStep":1,"totalSteps":4}]'
,PhantomJS 2.1.1 (Linux 0.0.0) LOG: 'setting initial model data'
,PhantomJS 2.1.1 (Linux 0.0.0) LOG: 'reloading model data'
,PhantomJS 2.1.1 (Linux 0.0.0) LOG: 'event [stepcompleted] broadcast on rootScope and dispatched against domID [model-1] with type [null], targetName [model-1] and data [{"stepNumber":1,"stepName":"Step 1","nextStep":2,"totalSteps":4}]'
,PhantomJS 2.1.1 (Linux 0.0.0) LOG: 'event [stepcompleted] broadcast on rootScope and dispatched against domID [model-1] with type [null], targetName [model-1] and data [{"stepNumber":2,"stepName":"Step 2","nextStep":3,"totalSteps":4}]'
,PhantomJS 2.1.1 (Linux 0.0.0) LOG: 'event [stepcompleted] broadcast on rootScope and dispatched against domID [model-1] with type [null], targetName [model-1] and data [{"stepNumber":3,"stepName":"Step 3","nextStep":4,"totalSteps":4}]'
,PhantomJS 2.1.1 (Linux 0.0.0) LOG: 'event [stepcompleted] broadcast on rootScope and dispatched against domID [model-1] with type [null], targetName [model-1] and data [{"stepNumber":4,"stepName":"Step 4","nextStep":-1,"totalSteps":4}]'
,PhantomJS 2.1.1 (Linux 0.0.0) LOG: 'ignoring attempt to next beyond last step'
,PhantomJS 2.1.1 (Linux 0.0.0) LOG: 'setting initial model data'
,PhantomJS 2.1.1 (Linux 0.0.0) LOG: 'reloading model data'
,PhantomJS 2.1.1 (Linux 0.0.0) LOG: 'now on step [1] targetting [4]'
,PhantomJS 2.1.1 (Linux 0.0.0) LOG: 'going to the next step.'
,PhantomJS 2.1.1 (Linux 0.0.0) LOG: 'now on step [2] targetting [4]'
,PhantomJS 2.1.1 (Linux 0.0.0) LOG: 'going to the next step.'
,PhantomJS 2.1.1 (Linux 0.0.0) LOG: 'now on step [3] targetting [4]'
,PhantomJS 2.1.1 (Linux 0.0.0) LOG: 'going to the next step.'
,PhantomJS 2.1.1 (Linux 0.0.0) LOG: 'now on step [4] targetting [4]'
,PhantomJS 2.1.1 (Linux 0.0.0) LOG: 'event [stepcompleted] broadcast on rootScope and dispatched against domID [model-1] with type [null], targetName [model-1] and data [{"stepNumber":4,"stepName":"Step 4","nextStep":4,"totalSteps":4}]'
,PhantomJS 2.1.1 (Linux 0.0.0) LOG: 'event [stepcompleted] broadcast on rootScope and dispatched against domID [model-1] with type [null], targetName [model-1] and data [{"stepNumber":4,"stepName":"Step 4","nextStep":-1,"totalSteps":4}]'
,PhantomJS 2.1.1 (Linux 0.0.0) LOG: 'event [stepcompleted] broadcast on rootScope and dispatched against domID [model-1] with type [null], targetName [model-1] and data [{"stepNumber":4,"stepName":"Step 4","nextStep":4,"totalSteps":4}]'
,PhantomJS 2.1.1 (Linux 0.0.0) LOG: 'event [stepcompleted] broadcast on rootScope and dispatched against domID [model-1] with type [null], targetName [model-1] and data [{"stepNumber":3,"stepName":"Step 3","nextStep":3,"totalSteps":4}]'
,PhantomJS 2.1.1 (Linux 0.0.0) LOG: 'event [stepcompleted] broadcast on rootScope and dispatched against domID [model-1] with type [null], targetName [model-1] and data [{"stepNumber":2,"stepName":"Step 2","nextStep":2,"totalSteps":4}]'
,PhantomJS 2.1.1 (Linux 0.0.0) LOG: 'event [stepcompleted] broadcast on rootScope and dispatched against domID [model-1] with type [null], targetName [model-1] and data [{"stepNumber":1,"stepName":"Step 1","nextStep":1,"totalSteps":4}]'
,PhantomJS 2.1.1 (Linux 0.0.0) LOG: 'Ignoring attempt to rewind when already at the beginning.'
,PhantomJS 2.1.1 (Linux 0.0.0) LOG: 'setting initial model data'
,PhantomJS 2.1.1 (Linux 0.0.0) LOG: 'skipping initial sequence watch invocation when there is no sequence to set.'
,PhantomJS 2.1.1 (Linux 0.0.0) LOG: 'setting initial model data'
,PhantomJS 2.1.1 (Linux 0.0.0) LOG: 'skipping initial sequence watch invocation when there is no sequence to set.'
,PhantomJS 2.1.1 (Linux 0.0.0) LOG: 'setting initial model data'
,PhantomJS 2.1.1 (Linux 0.0.0) LOG: 'skipping initial sequence watch invocation when there is no sequence to set.'
,PhantomJS 2.1.1 (Linux 0.0.0) LOG: 'setting initial model data'
,PhantomJS 2.1.1 (Linux 0.0.0) LOG: 'skipping initial sequence watch invocation when there is no sequence to set.'
,PhantomJS 2.1.1 (Linux 0.0.0) LOG: 'setting initial model data'
,PhantomJS 2.1.1 (Linux 0.0.0) LOG: 'skipping initial sequence watch invocation when there is no sequence to set.'
,PhantomJS 2.1.1 (Linux 0.0.0) LOG: 'setting initial model data'
,PhantomJS 2.1.1 (Linux 0.0.0) LOG: 'skipping initial sequence watch invocation when there is no sequence to set.'
,PhantomJS 2.1.1 (Linux 0.0.0) LOG: 'setting initial model data'
,PhantomJS 2.1.1 (Linux 0.0.0) LOG: 'skipping initial sequence watch invocation when there is no sequence to set.'
,PhantomJS 2.1.1 (Linux 0.0.0) LOG: 'setting initial model data'
,PhantomJS 2.1.1 (Linux 0.0.0) LOG: 'skipping initial sequence watch invocation when there is no sequence to set.'
,PhantomJS 2.1.1 (Linux 0.0.0) LOG: 'setting initial model data'
,PhantomJS 2.1.1 (Linux 0.0.0) LOG: 'skipping initial sequence watch invocation when there is no sequence to set.'
,PhantomJS 2.1.1 (Linux 0.0.0) LOG: 'setting initial model data'
,PhantomJS 2.1.1 (Linux 0.0.0) LOG: 'skipping initial sequence watch invocation when there is no sequence to set.'
,PhantomJS 2.1.1 (Linux 0.0.0) LOG: 'setting initial model data'
,PhantomJS 2.1.1 (Linux 0.0.0) LOG: 'skipping initial sequence watch invocation when there is no sequence to set.'
,PhantomJS 2.1.1 (Linux 0.0.0) LOG: 'setting initial model data'
,PhantomJS 2.1.1 (Linux 0.0.0) LOG: 'skipping initial sequence watch invocation when there is no sequence to set.'
,PhantomJS 2.1.1 (Linux 0.0.0) LOG: 'setting initial model data'
,PhantomJS 2.1.1 (Linux 0.0.0) LOG: 'skipping initial sequence watch invocation when there is no sequence to set.'
,PhantomJS 2.1.1 (Linux 0.0.0) LOG: 'setting initial model data'
,PhantomJS 2.1.1 (Linux 0.0.0) LOG: 'skipping initial sequence watch invocation when there is no sequence to set.'
,PhantomJS 2.1.1 (Linux 0.0.0) LOG: 'setting initial model data'
,PhantomJS 2.1.1 (Linux 0.0.0) LOG: 'skipping initial sequence watch invocation when there is no sequence to set.'
,PhantomJS 2.1.1 (Linux 0.0.0) LOG: 'setting initial model data'
,PhantomJS 2.1.1 (Linux 0.0.0) LOG: 'skipping initial sequence watch invocation when there is no sequence to set.'
,PhantomJS 2.1.1 (Linux 0.0.0) LOG: 'setting initial model data'
,PhantomJS 2.1.1 (Linux 0.0.0) LOG: 'skipping initial sequence watch invocation when there is no sequence to set.'
,PhantomJS 2.1.1 (Linux 0.0.0) LOG: 'setting initial model data'
,PhantomJS 2.1.1 (Linux 0.0.0) LOG: 'skipping initial sequence watch invocation when there is no sequence to set.'
,PhantomJS 2.1.1 (Linux 0.0.0) LOG: 'skipping drawing the empty string: [', undefined, ']'
,PhantomJS 2.1.1 (Linux 0.0.0) LOG: 'skipping drawing the empty string: [', undefined, ']'
,PhantomJS 2.1.1 (Linux 0.0.0) LOG: 'skipping drawing the empty string: [', undefined, ']'
,PhantomJS 2.1.1 (Linux 0.0.0) LOG: 'skipping drawing the empty string: [', undefined, ']'
,PhantomJS 2.1.1 (Linux 0.0.0) LOG: 'Warning, initial size specified on [target-01] is not a number: []'
,PhantomJS 2.1.1 (Linux 0.0.0) LOG: 'Warning, initial size specified on [target-01] is not a number: []'
,PhantomJS 2.1.1 (Linux 0.0.0) LOG: 'Warning, initial size specified on [target-01] is not a number: [Infinity]'
,PhantomJS 2.1.1 (Linux 0.0.0) LOG: 'Warning, initial size specified on [target-01] is not a number: [fancy pants]'
,PhantomJS 2.1.1 (Linux 0.0.0) LOG: 'a size on the twx-dt-target is now required.'
,PhantomJS 2.1.1 (Linux 0.0.0) LOG: 'Cannot set scale to 0 or NaN: fancy / 0.5'
,PhantomJS 2.1.1 (Linux 0.0.0) LOG: 'Cannot set scale to 0 or NaN: infinity / 0.5'
,PhantomJS 2.1.1 (Linux 0.0.0) LOG: 'Cannot set scale to 0 or NaN: NaN / 0.5'
,PhantomJS 2.1.1 (Linux 0.0.0) LOG: 'a size on the twx-dt-target is now required.'

]]>
  </system-out>
  <system-err/>
</testsuite>