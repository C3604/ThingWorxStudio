/* begin copyright text
 *
 * Copyright Â© 2016 PTC Inc., Its Subsidiary Companies, and /or its Partners. All Rights Reserved.
 *
 * end copyright text
 */
function twxTextInput() {
  return {
    elementTag: 'twx-text-input',

    label: 'ves-basic-web-widgets-extension:Text Input',

    category: 'basic-html',

    properties: [
      {
          name: 'class',
          label: 'ves-basic-web-widgets-extension:Class',
          datatype: 'string',
          //default: '',
          isBindingTarget: true
      },
      {
        name: 'text',
        label: 'ves-basic-web-widgets-extension:Text',
        datatype: 'string',
        default: '',
        isBindingTarget: true,
        isBindingSource: true
      },
      {
        name: 'type',
        label: 'ves-basic-web-widgets-extension:Type',
        datatype: 'string',
        default: 'placeholder',
        editor: 'select',
        options: [
              { label: 'ves-basic-web-widgets-extension:Placeholder', value: 'placeholder' },
              { label: 'ves-basic-web-widgets-extension:Inline Label', value: 'inlinelabel' },
              { label: 'ves-basic-web-widgets-extension:Stacked Label', value: 'stackedlabel' },
              { label: 'ves-basic-web-widgets-extension:Floating Label', value: 'floatinglabel' }
          ]
      },
      {
        name: 'align',
        label: 'ves-basic-web-widgets-extension:Align',
        datatype: 'string',
        default: 'left',
        editor: 'align',
        options: [
              { label: 'ves-basic-web-widgets-extension:Left', value: 'left' },
              { label: 'ves-basic-web-widgets-extension:Center', value: 'center' },
              { label: 'ves-basic-web-widgets-extension:Right', value: 'right' }
              //{ label: 'ves-basic-web-widgets-extension:Justify', value: 'justify' }
          ]
      },
      {
        name: 'placeholder',
        label: 'ves-basic-web-widgets-extension:Placeholder',
        datatype: 'string',
        default: 'placeholder text',
        isBindingTarget: true
      },
      {
        name: 'label',
        label: 'ves-basic-web-widgets-extension:Label',
        datatype: 'string',
        default: 'Input Label'
      },
      {
        name: 'visible',
        label: 'ves-basic-web-widgets-extension:Visible',
        datatype: 'boolean',
        default: true,
        isBindingTarget: true
      },
      {
        name: 'disabled',
        label: 'ves-basic-web-widgets-extension:Disabled',
        datatype: 'boolean',
        default: false,
        isBindingTarget: true
      },
      {
        name: 'padding',
        label: 'ves-basic-web-widgets-extension:Padding',
        datatype: 'string',
        default: ''
      },
      {
        name: 'margin',
        label: 'ves-basic-web-widgets-extension:Margin',
        datatype: 'string',
        default: ''
      }
    ],

    events: [
      {
        name: 'change',
        label: 'ves-basic-web-widgets-extension:Value Changed'
      },
      {
        name: 'click',
        label: 'ves-basic-web-widgets-extension:Click'
      }
    ],

    designTemplate: function () {
      return '<div ng-switch on="me.type">' + 
                '<label ng-switch-when="placeholder" class="item item-input {{me.class}}" style="margin:{{me.margin}}; padding:{{me.padding}};"><input style="text-align: {{me.align}}" type="text" placeholder="{{me.placeholder}}" ng-model="me.text"/></label>' +
                '<label ng-switch-when="inlinelabel" class="item item-input {{me.class}}" style="margin:{{me.margin}}; padding:{{me.padding}};"><span class="input-label">{{me.label}}</span><input style="text-align: {{me.align}}" type="text" placeholder="{{me.placeholder}}" ng-model="me.text"/></label>' +
                '<label ng-switch-when="stackedlabel" class="item item-input item-stacked-label {{me.class}}" style="margin:{{me.margin}}; padding:{{me.padding}};"><span class="input-label">{{me.label}}</span><input style="text-align: {me.align}}" type="text" placeholder="{{me.placeholder}}" ng-model="me.text"/></label>' +
                '<label ng-switch-when="floatinglabel" class="item item-input item-floating-label {{me.class}}" style="margin:{{me.margin}}; padding:{{me.padding}};"><span class="input-label">{{me.label}}</span><input style="text-align: {{me.align}}" type="text" placeholder="{{me.placeholder}}" ng-model="me.text"/></label>' +
              '</div>';
    },

    runtimeTemplate: function (props) {
      switch(props.type){
        case 'placeholder':
          var tmpl = '<label ng-show="app.fn.isTrue(me.visible)" class="ng-hide item item-input {{me.class}}" ng-click="fireEvent(\'click\');"><input type="text" style="text-align: {{me.align}};" ng-disabled="app.fn.isTrue(me.disabled)" placeholder="{{me.placeholder}}" ng-model="me.text" ng-change="fireEvent(\'change\')"/></label>';
          break;
        case 'inlinelabel':
          var tmpl = '<label ng-show="app.fn.isTrue(me.visible)" class="ng-hide item item-input {{me.class}}" ng-click="fireEvent(\'click\');"><span class="input-label">{{me.label}}</span><input style="text-align: {{me.align}};" type="text" ng-disabled="app.fn.isTrue(me.disabled)" placeholder="{{me.placeholder}}" ng-model="me.text" ng-change="fireEvent(\'change\')"/></label>';
          break;
        case 'stackedlabel':
          var tmpl = '<label ng-show="app.fn.isTrue(me.visible)" class="ng-hide item item-input item-stacked-label {{me.class}}" ng-click="fireEvent(\'click\');"><span class="input-label">{{me.label}}</span><input style="text-align: {{me.align}}" type="text" ng-disabled="app.fn.isTrue(me.disabled)" placeholder="{{me.placeholder}}" ng-model="me.text" ng-change="fireEvent(\'change\')"/></label>';
          break;
        case 'floatinglabel':
          var tmpl = '<label ng-show="app.fn.isTrue(me.visible)" class="ng-hide item item-input item-floating-label {{me.class}}" ng-click="fireEvent(\'click\');"><span class="input-label">{{me.label}}</span><input style="text-align: {{me.align}}" type="text" ng-disabled="app.fn.isTrue(me.disabled)" placeholder="{{me.placeholder}}" ng-model="me.text" ng-change="fireEvent(\'change\')"/></label>';
          break;
        default:
          var tmpl = '<label ng-show="app.fn.isTrue(me.visible)" class="ng-hide item item-input {{me.class}}" ng-click="fireEvent(\'click\');"><input style="text-align: {{me.align}}" type="text" ng-disabled="app.fn.isTrue(me.disabled)" placeholder="{{me.placeholder}}" ng-model="me.text" ng-change="fireEvent(\'change\')"/></label>';
          break;
      }
      
      return tmpl;
    }
  }
}

twxAppBuilder.widget('twxTextInput', twxTextInput);