/* begin copyright text
 *
 * Copyright Â© 2016 PTC Inc., Its Subsidiary Companies, and /or its Partners. All Rights Reserved.
 *
 * end copyright text
 */
/*jshint multistr:true */
(function (twxAppBuilder) {

  var defaultText = 'Label';
  try {
    defaultText = i18next.t('ves-basic-web-widgets-extension:Label');
  }
  catch(e){
    //Running on the server
  }

  function twxDataGridCol() {
    return {
      elementTag: 'twx-data-grid-col',

      label: 'ves-basic-web-widgets-extension:Data Grid Column',

      category: 'basic-html',

      isVisibleInPalette:  false,

      isContainer: true,

      outputElementsOnly: true,

      dropTargetSelector: 'twx-data-grid',

      isValidDropTarget: function (targetEl, sourceEl) {
        return targetEl && sourceEl && $(sourceEl).closest('twx-data-grid').attr('widget-id') === $(targetEl).closest('twx-data-grid').attr('widget-id');
      },

      // the grid columns will be created when the data is bound to the data grid
      allowCopy: false,

      properties: addStateFormattingProperties([
        {
          name: 'class',
          label: 'ves-basic-web-widgets-extension:Class',
          datatype: 'string',
          default: ''
        },
        {
          name: 'label',
          label: 'ves-basic-web-widgets-extension:Label',
          datatype: 'string',
          default: defaultText,
          isBindingTarget: true
        },
        {
          name: 'autoGeneratedFrom',
          label: '',
          datatype: 'string',
          isVisible: false,
          default: ''
        },
        {
          name: 'horizontalAlignment',
          label: 'ves-basic-web-widgets-extension:Horizontal Alignment',
          datatype: 'string',
          default: 'left',
          editor: 'select',
          options: [
            { label: 'ves-basic-web-widgets-extension:Left', value: 'left' },
            { label: 'ves-basic-web-widgets-extension:Center', value: 'center' },
            { label: 'ves-basic-web-widgets-extension:Right', value: 'right' }
          ]
        },
        {
          name: 'verticalAlignment',
          label: 'ves-basic-web-widgets-extension:Vertical Alignment',
          datatype: 'string',
          default: 'middle',
          editor: 'select',
          options: [
            { label: 'ves-basic-web-widgets-extension:Top', value: 'top' },
            { label: 'ves-basic-web-widgets-extension:Middle', value: 'middle' },
            { label: 'ves-basic-web-widgets-extension:Bottom', value: 'bottom' }
          ]
        }
      ]),

      designTemplate: function () {

        return '<div class="data-grid-col {{me.class}}">' +
          '<div class="data-grid-th {{$parent.me.headerClass}} {{me.horizontalAlignment}}"><label>{{me.label}}</label></div>' +
          '<div class="data-grid-td {{me.verticalAlignment}} {{me.horizontalAlignment}}"><twx-container-content></twx-container-content></div>' +
          '</div>';
        //<twx-col twx-widget><twx-container-content></twx-container-content></twx-col>
      },

      runtimeTemplate: function (properties) {
        var stateFormatValue = (properties.stateFormatValue) ? ('item.' + properties.stateFormatValue) : ('item.' + properties.autoGeneratedFrom);
        var label = properties.label;
        var cssName = label.replace(/[^a-zA-Z0-9\-\_\.]/gi, '_');
        var cssClasses = ['item-header-cell', 'header-cell-' + cssName, properties.verticalAlignment, properties.horizontalAlignment];
        if(properties.enableStateFormatting) {
          cssClasses = cssClasses.concat(['basic-state-formatting']);
        }
        cssClasses = cssClasses.concat([properties.class]);

        var tmpl = '<td class="'+ cssClasses.join(' ') + '"' + getStateFormattingMarkup(properties, stateFormatValue) + '></td>';
        return tmpl;
      }
    };
  }

  twxAppBuilder.widget('twxDataGridCol', twxDataGridCol);

})(twxAppBuilder);