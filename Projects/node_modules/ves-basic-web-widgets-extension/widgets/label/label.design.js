/* begin copyright text
 *
 * Copyright Â© 2016 PTC Inc., Its Subsidiary Companies, and /or its Partners. All Rights Reserved.
 *
 * end copyright text
 */
function twxLabel() {
  var defaultText = 'Label';
  try {
    defaultText = i18next.t('ves-basic-web-widgets-extension:Label');
  }
  catch(e){
    //Running on the server
  }
  return {
    elementTag: 'twx-label',

    label: 'ves-basic-web-widgets-extension:Label',

    category: 'basic-html',

    properties: addStateFormattingProperties([
      {
        name: 'text',
        label: 'ves-basic-web-widgets-extension:Text',
        datatype: 'string',
        default: defaultText,
        isBindingTarget: true,
        defaultDependentField: true
      },
      {
        name: 'class',
        label: 'ves-basic-web-widgets-extension:Class',
        datatype: 'string',
        default: 'simple-label',
        isBindingTarget: true
      },
      {
        name: 'padding',
        label: 'ves-basic-web-widgets-extension:Padding',
        datatype: 'string',
        default: '0px'
      },
      {
        name: 'visible',
        label: 'ves-basic-web-widgets-extension:Visible',
        datatype: 'boolean',
        default: true,
        isBindingTarget: true
      },
      {
        name: 'margin',
        label: 'ves-basic-web-widgets-extension:Margin',
        datatype: 'string',
        default: ''
      },
      {
        name: 'wrap',
        label: 'ves-basic-web-widgets-extension:Wrap Label Text',
        datatype: 'boolean',
        default: true
      }
    ]),

    events: [
      {
        name: 'click',
        label: 'ves-basic-web-widgets-extension:Click'
      }
    ],

    designTemplate: function () {
      return '<span class="{{me.class}}" style="padding: {{me.padding}}; margin: {{me.margin}};">{{me.text}}</span>';
    },

    runtimeTemplate: function (props) {
      var wrapSettingsClass = '';
      if(props.wrap === 'false'){
        wrapSettingsClass = 'noWrap';
      } else {
        wrapSettingsClass =  props.wrap + '-' + typeof props.wrap;
      }
      var margin = '';
      if (props.margin) {
        margin = 'margin:'+ props.margin + '; ';
      }
      var padding = '';
      if (props.padding) {
        padding = 'padding:'+ props.padding + '; ';
      }
      var cssClasses = ['ng-hide', 'labelWidget'];
      if(props.enableStateFormatting) {
        cssClasses = cssClasses.concat(['basic-state-formatting', 'basic-state-formatting-image']);
      }
      cssClasses = cssClasses.concat(['{{me.class}}', 'wrapSettingsClass']);

      var tmpl = '<div ng-show="app.fn.isTrue(me.visible)" ' +
        'class="' + cssClasses.join(' ') + '" ' +
        'style="' + padding + margin +'" ' +
        'ng-click="fireEvent(\'click\');">{{me.text}}</div>';
      return tmpl;
    }
  }
}

twxAppBuilder.widget('twxLabel', twxLabel);