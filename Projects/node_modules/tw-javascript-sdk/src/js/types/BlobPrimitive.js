var TW = TW || {};
TW.SDK = TW.SDK || {};
TW.SDK.Types = TW.SDK.Types || {};

(function () {
    TW.SDK.Types.BlobPrimitive = {
        decode: function(data) {
            TW.SDK.HelperFunctions.validateParameter(data, 'data', ArrayBuffer);

            var view = new DataView(data);
            var length = view.getInt32(0);
            var offset = 4;

            var unsignedView = new Uint8Array(data, offset, length);
            var result = String.fromCharCode.apply(null, unsignedView);

            return {
                length: length + offset,
                content: btoa(result) // Base64-encoded binary
            };
        },

        encode: function(content) {
            TW.SDK.HelperFunctions.validateParameter(content, 'content', 'string');

            var str = content;

            str = atob(content);
            var size = str.length + 4;
            var offset = 0;

            var buffer = new ArrayBuffer(size);
            var view = new DataView(buffer);

            view.setInt32(offset, str.length);
            offset += 4;

            for (var i = 0; i < str.length; i++) {
                view.setInt8(offset++, str.charCodeAt(i));
            }

            return buffer;
        },

        getDefaultValue: function() {
            return "";
        }
    };
})();
