var TW = TW || {};
TW.SDK = TW.SDK || {};
TW.SDK.Types = TW.SDK.Types || {};

(function () {
    TW.SDK.Types.TagCollectionPrimitive = {
        decode: function(data) {
            TW.SDK.HelperFunctions.validateParameter(data, 'data', ArrayBuffer);

            var collection = TW.SDK.Types.StringPrimitive.decode(data);

            var tags = collection.content.split(';');
            var result = [];

            _.each(tags, function(tag) {
                var splitTag = tag.split(':');

                result.push({
                    vocabulary: splitTag[0],
                    vocabularyTerm: splitTag[1]
                });
            });

            return {
                length: collection.length,
                content: result
            };
        },

        encode: function(content) {
            TW.SDK.HelperFunctions.validateParameter(content, 'content', 'array');

            var convertedTags = "";
            var lastTag = _.last(content);

            _.each(content, function(tag) {
                var vocabulary = tag.vocabulary || "";
                var term = tag.vocabularyTerm || "";

                convertedTags += vocabulary + ":" + term;

                if (tag !== lastTag) {
                    convertedTags += ";";
                }
            });

            return TW.SDK.Types.StringPrimitive.encode(convertedTags);
        },

        getDefaultValue: function() {
            return [];
        }
    };
})();
