/* begin copyright text
 *
 * Copyright Â© 2016 PTC Inc., Its Subsidiary Companies, and /or its Partners. All Rights Reserved.
 *
 * end copyright text
 */
/* globals ctrl, $q, $rootScope, $window */
'use strict';

const fs = require('fs-extra');
const path = require('path');
const VESPublish = require('ves-publish');

function onpublish(config) {
    var vesArgs = {
        baseDir: config.path,
        name: config.settings.name,
        developer: {name: config.user.name, password: config.user.password},
        server: config.settings.thingworxServer,
        sslValidate: config.allowSelfSignedCerts,
        requestConfig: config.requestConfig,
        notifyClient: config.notifyClient
    };

    return VESPublish.publishApp(vesArgs).then(function() {
        var metadata = {};
        try {
            metadata = fs.readJsonSync(path.join(vesArgs.baseDir, 'dist', 'phone', 'WEB-INF', 'metadata.json'));
        } catch (e) {
            console.error('could not find a metadata.json file.', e);
        }

        return VESPublish.setAccessType(vesArgs, metadata.accessType === 'public');
    });
}

function validateReadyToPublish() {
    var deferred = $q.defer();

    var count = 0;
    if (ctrl.metadataJsonDefinition && ctrl.metadataJsonDefinition.experiences) {
        var exps = ctrl.metadataJsonDefinition.experiences;
        var i = exps.length;
        while (i--) {
            if (!(exps[i].title && exps[i].title.en && (
                (exps[i].xperienceType === 'vumark' && exps[i].vumark && /^(0|[1-9][0-9]*):(0|[1-9][0-9]*)$/.test(exps[i].vumark)) ||
                (exps[i].xperienceType === 'thingTemplate' && exps[i].thingTemplateName) ||
                (exps[i].xperienceType === 'none')))) {
                deferred.reject(false);
            } else {
                count++;
            }
        }
    }

    if (count > 0) {
        deferred.resolve(true);
    } else {
        deferred.reject(false);
    }

    return deferred.promise;
}

function validatePublishFailureCallback() {
    $rootScope.currentProjectEditor = 'appExperienceEditor'; //Switch to the Experiences editor;
    $window.alert("Missing required information.");
    $q.reject(false);
}

module.exports = {
    onpublish: onpublish,
    validatePublishFailureCallback: validatePublishFailureCallback,
    validateReadyToPublish: validateReadyToPublish
};