const fs = require('fs-extra');
const path = require('path');
const _ = require('lodash');

/**
 * Does upgrade work for projects older than 1.8
 * @param {object} params - the same params given to onupgrade func + removeSync func
 * @param log - logs to console & upgrade.log
 */
function onupgrade(params, log) {
    const settings = params.settings;
    if (settings.previewUrl && settings.previewUrl.startsWith('http://localhost:3001/')) {
        log.debug('Switch preview port to 3000');
        settings.previewUrl = settings.previewUrl.replace('http://localhost:3001/', 'http://localhost:3000/');
    }
    const views = params.getViews(settings);
    _.each(views, function (view) {
        if (view.viewType && (view.viewType === 'blank' || view.viewType === 'normal')) {
            log.debug('migrate viewType from', view.viewType, 'to ionic-2D');
            // lazily migrate 2D views created <= 1.0
            // this 'lazy migration' used to be done by studio, but was moved to upgrade func at 1.7.0
            view.viewType = 'ionic-2D';
        }
    });

    // update contents of src/shared/styles/app.scss, replace all occurrences of '../../resources' with '#{$resources}'
    const appScssFile = path.join(params.path, 'src', 'shared', 'styles', 'app.scss');
    if (fs.existsSync(appScssFile)) {
        var content = fs.readFileSync(appScssFile, {encoding: 'utf8', flag: 'a+'});
        content = content.replace(/\.\.\/\.\.\/resources/g, '#{$resources}');

        fs.writeFileSync(appScssFile, content);
        log.debug('Updated ' + appScssFile + ', replaced all occurrences of "../../resources" with "#{$resources}"');
    }
}

module.exports = {
    version: '1.7.0',
    range: '<1.7.0 || 1.7.x',
    onupgrade: onupgrade
};