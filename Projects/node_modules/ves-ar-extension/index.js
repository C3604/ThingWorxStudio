/* begin copyright text
 *
 * Copyright Â© 2016 PTC Inc., Its Subsidiary Companies, and /or its Partners. All Rights Reserved.
 *
 * end copyright text
 */
var path = require('path');
var _ = require('lodash');

const build = require('./server/tasks/build.js');
const publish = require('./server/tasks/publish.js');
const upgrade = require('./server/tasks/upgrade.js');
const create = require('./server/tasks/create.js');
const saveas = require('./server/tasks/saveas.js');

function fullyQualify(libs) {
  var i = libs.length;
  while (i--) {
    libs[i] = path.resolve(__dirname, libs[i]);
  }

  return libs;
}

exports = module.exports = function (common) {
  var projectExports = {};

// directory where resources will be uploaded
  projectExports.resourceDirectory = 'src/phone/resources';

  var initialSettings = {
    version: upgrade.currentVersion,
    viewType: 'ar',
    device: {
      name: 'phone'
    },
    state: {
      orientation: 'portrait'
    },
    targets: {
      'phone': {
        'components': [
          {
            'name': 'Home',
            'fileName': 'Home',
            "showInMainMenu": true,
            "viewType": "ar",
            'title': 'Home'
          }
        ],
        'images': []
      },
      'shared': {
        'components': [
          {
            'name': 'Data',
            'fileName': 'Data'
          }
        ],
        'images': [],
        'styles': [
          {
            'name': 'App',
            'fileName': 'App',
            'fileExt': 'scss'
          }
        ]
      }
    },
    mainNavigationMenuStyle: 'leftSideMenu',
    previewUrl: 'http://localhost:3000/preview.html?project=${project}&format=${format}&orientation=${orientation}&phone=true',
    resourceDirectory: projectExports.resourceDirectory,
    resourceRuntimeDir: 'app/resources',
    fontRuntimeDir: '../fonts',
    fontDesigntimeDir: '../dist/phone/fonts',
    theme: 'twx-light'
  };

  var viewTypes =
    [
      {
        'name': 'ar',
        'imgPath': 'images/icon3D.svg',
        'widgetType': ['ar', 'ionic-2D', 'basic-html', 'web', 'desktop'],
        'label': 'AR'
      },
      {
        'name': 'ionic-2D',
        'imgPath': 'images/icon2D.svg',
        'widgetType': ['ionic-2D', 'basic-html', 'web', 'desktop'],
        'label': '2D'
      }
    ];

  projectExports.projectTypes = [
    {
      name: 'AR',
      path: path.resolve(__dirname, 'src', 'ar'),
      scaffoldPath: path.resolve(__dirname, 'src', 'src-scaffold'),
      id: 'AR',
      cls: 'projectType-AR',
      imgPath: 'images/iconMobile.svg',
      label: 'Mobile',
      viewTypes: viewTypes,
      onupgrade: upgrade.onupgrade,
      isUpgradeNeeded: upgrade.isUpgradeNeeded,
      onbuild: build.onbuild,
      oncreate: create.oncreate,
      onpublish: publish.onpublish,
      onsaveas: saveas.onsaveas,
      validateReadyToPublish: publish.validateReadyToPublish,
      validatePublishFailureCallback: publish.validatePublishFailureCallback,
      initialSettings: initialSettings
    },
    {
      name: 'Desktop',
      path: path.resolve(__dirname, 'src', 'ar'),
      scaffoldPath: path.resolve(__dirname, 'src', 'src-scaffold'),
      id: 'desktop',
      cls: 'projectType-desktop',
      imgPath: 'images/iconDesktop.svg',
      label: 'Desktop',
      viewTypes: [ {
        'name': 'desktop',
        'imgPath': 'images/iconDesktop.svg',
        'widgetType': ['basic-html', 'web', 'desktop'],
        'label': 'Desktop'
      }],
      onupgrade: upgrade.onupgrade,
      isUpgradeNeeded: upgrade.isUpgradeNeeded,
      onbuild: build.onbuild,
      oncreate: create.oncreate,
      onpublish: publish.onpublish,
      onsaveas: saveas.onsaveas,
      validateReadyToPublish: publish.validateReadyToPublish,
      validatePublishFailureCallback: publish.validatePublishFailureCallback,
      visible: !!common.builderSettings.desktop,
      initialSettings:  _.defaultsDeep({
        theme: 'bootstrap-twx-default',
        viewType: 'desktop',
        previewUrl: 'http://localhost:3000/preview.html?project=${project}&format=max&phone=true',
        indexTemplate: 'index-bootstrap.html.template',
        targets: {
          'phone': {
            'components': [
              {
                'name': 'Home',
                'fileName': 'Home',
                "showInMainMenu": true,
                "viewType": "desktop",
                'title': 'Home'
              }
            ]
          }
        }
      }, initialSettings)
    },
    {
      name: '2d-mobile-ionic',
      path: path.resolve(__dirname, 'src', 'ar'),
      id: '2D',
      widgetType: ['ar', 'ionic-2D', 'basic-html', 'web', 'desktop'],
      visible: false,
      cls: 'projectType-2D',
      imgPath: 'images/icon2D.svg',
      label: '2D',
      viewTypes: viewTypes,
      onupgrade: upgrade.onupgrade,
      isUpgradeNeeded: upgrade.isUpgradeNeeded,
      onbuild: build.onbuild,
      oncreate: create.oncreate,
      onpublish: publish.onpublish,
      validateReadyToPublish: publish.validateReadyToPublish,
      validatePublishFailureCallback: publish.validatePublishFailureCallback,
      initialSettings: _.defaultsDeep({
        viewType: 'ionic-2D',
        targets: {
          'phone': {
            'components': [
              {
                "viewType": "ionic-2D"
              }
            ]
          }
        }
      }, initialSettings)
    },
    {
      name: 'Eyewear',
      path: path.resolve(__dirname, 'src', 'ar'),
      defaultResourcesPath: path.resolve(__dirname, 'src', 'eyewear'),
      scaffoldPath: path.resolve(__dirname, 'src', 'src-scaffold'),
      id: 'eyewear',
      cls: 'projectType-eyewear',
      imgPath: 'images/iconEyewear.svg',
      label: 'Eyewear',
      viewTypes: [{
        'name': 'ar',
        'imgPath': 'images/iconEyewear.svg',
        'widgetType': ['ar'],
        'label': 'AR'
      }],
      onupgrade: upgrade.onupgrade,
      isUpgradeNeeded: upgrade.isUpgradeNeeded,
      onbuild: build.onbuild,
      oncreate: create.oncreate,
      onpublish: publish.onpublish,
      validateReadyToPublish: publish.validateReadyToPublish,
      validatePublishFailureCallback: publish.validatePublishFailureCallback,
      visible: !!common.builderSettings.enableEyewearOption,
      initialSettings:  _.defaultsDeep({
        mainNavigationMenuStyle: 'noMenu',
        device: {
          name: 'tablet'
        },
        state: {
          orientation: 'landscape'
        }
      }, initialSettings)
    }
  ];

  projectExports.canvasLibraries = function() {
    var libs = [
      "widgets/twx-mobile-widgets-3d/ide/js/ptc/thingview/thingview.js",
      "widgets/twx-mobile-widgets-3d/ide/js/ptc/thingview/libthingview.js"
    ];

    return fullyQualify(libs);
  };

  projectExports.canvasAngularModulesRequires = ['twx-mobile-widgets-3d-ng'];

  projectExports.canvasAngularModules = function() {
    var libs = [
      "widgets/twx-mobile-widgets-3d/ide/js/twx-mobile-widgets-3d-ng.js"
    ];
    return fullyQualify(libs);
  };

  projectExports.runtimeLibraries = function() {
    var libs = [
      path.resolve(__dirname, 'widgets', 'twx-mobile-widgets-basics', 'runtime', "js/moment.min.js"),
      path.resolve(__dirname, 'widgets', 'twx-mobile-widgets-basics', 'runtime', "js/justgage.js"),
      path.resolve(__dirname, 'widgets', 'twx-mobile-widgets-basics', 'runtime', "js/raphael-2.1.4.min.js"),
      path.resolve(__dirname, 'widgets', 'twx-mobile-widgets-basics', 'runtime', "js/twxGauge.js")
    ];
    return fullyQualify(libs);
  };

  projectExports.runtimeAngularModulesRequires = ['ionic', 'twx.byoc', 'ngJustGage', 'common-html-widgets-ng', 'chartjs-ng'];

  projectExports.IDEImages = [
    path.resolve(__dirname, 'src', 'ide', 'images', '*'),
    path.resolve(__dirname, 'widgets', 'twx-mobile-widgets-basics', 'ide', 'images', '*'),
    path.resolve(__dirname, 'widgets', 'twx-mobile-widgets-3d', 'ide', 'images', '*')
  ];

  projectExports.widgetsJS = [
    path.resolve(__dirname, 'widgets', 'twx-mobile-widgets-3d', 'widgets', '**', '*.js'),
    path.resolve(__dirname, 'widgets', 'twx-mobile-widgets-basics', 'widgets', '**', '*.js')
  ];

  projectExports.widgetsCSS = [
    path.resolve(__dirname, 'widgets', 'twx-mobile-widgets-3d', 'widgets', '**', '*.scss'),
    path.resolve(__dirname, 'widgets', 'twx-mobile-widgets-basics', 'widgets', '**', '*.scss')
  ];

  projectExports.themeBaseFiles = [
    path.resolve(__dirname, 'src', 'src-scaffold', 'ionic', 'scss', '**', '*')
  ];

  var themeBaseDir = path.resolve(__dirname, "src", "src-scaffold", "themes");
  var bootstrapNodePathDev = path.join(__dirname, 'node_modules', 'bootstrap', 'scss');
  var bootstrapNodePath = path.join(__dirname, '..', 'node_modules', 'bootstrap', 'scss');

  var twxLightTheme = {
    "name": "twx-light",
    "title": "Light (Default)",
    "description": "Light colors",
    "includePaths": path.resolve(__dirname, 'src', 'src-scaffold', 'ionic', 'scss'),
    "projectType": "AR"
  };

  var twxDarkTheme = _.defaults({
    "name": "twx-dark",
    "title": "Dark",
    "description": "Dark colors"
  }, twxLightTheme);

  projectExports.themes = [
    twxLightTheme,
    twxDarkTheme,
    _.defaults({"projectType": "eyewear"}, twxLightTheme),
    _.defaults({"projectType": "eyewear"}, twxDarkTheme),
    {
      "name": "bootstrap-twx-default",
      "title": "Default Bootstrap",
      "description": "Default Bootstrap theme",
      "includePaths": [path.join(themeBaseDir, 'bootstrap-theme-base'), bootstrapNodePath, bootstrapNodePathDev, path.resolve(themeBaseDir, 'bootstrap-twx-default')],
      "projectType": "desktop"
    }
  ];

  projectExports.translationsBaseDirectories = [path.resolve(__dirname, 'locales')];

  return projectExports;
};
