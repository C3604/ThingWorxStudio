(function(angular) {
    "use strict";

    var module = angular.module("com.thingworx.components.charts", ['googlechart']);

    module.controller('twxChartController', function($scope) {
        var columns = [];
        this.addColumn = function(column) {
            columns.push(column);
        };
        this.getColumns = function() {
            return columns;
        };
        this.getChartObject = function(){
            if (!$scope.chartObject) {
                $scope.chartObject = {
                    displayed: true,
                    data: {},
                    options: {
                        hAxis: {
                            format: 'M/d/yy HH:mm'
                        },
                        vAxis: {},
                        series: {}
                    },
                    formatters: {},
                    view: {}
                };
            }
            return $scope.chartObject;
        };
        $scope.chartReady = function() {
            $scope.$emit('twxChartReady');
        };
    });

    module.directive("twxChart", function($compile, $parse) {
        return {
            restrict: 'E',
            controller: 'twxChartController',
            scope: true,
            link: function(scope, element, attrs, twxChartController) {
                if (attrs.chartType) {
                    twxChartController.getChartObject().type = attrs.chartType;
                }
                if (attrs.title) {
                    twxChartController.getChartObject().options.title = attrs.title;
                }
                if (attrs.backgroundColor) {
                    twxChartController.getChartObject().options.backgroundColor = attrs.backgroundColor;
                }
                if (angular.isDefined(attrs.hideTitles)) {
                    twxChartController.getChartObject().options.axisTitlesPosition = 'none';
                }
                if (attrs.twxModel) {
                    element.append('<div google-chart chart="chartObject" on-ready="chartReady()"></div>');
                    $compile(element.contents())(scope);
                    scope.$watch(function() {
                        return $parse(attrs.twxModel)(scope.$parent);
                    },
                    function(newValue, oldValue) {
                       if (newValue) {
                           // shove the data into the rows, and tell the chart to render
                           var rows = [];
                           angular.forEach(newValue, function(value, key) {
                               var c = [];
                               angular.forEach(twxChartController.getColumns(), function(column, key) {
                                   c.push({
                                       "v": value[column]
                                   });
                               });
                               var dataValue = {
                                   "c": c
                               };
                               rows.push(dataValue);
                           });
                           twxChartController.getChartObject().data.rows = rows;
                       } else {
                           // no data, so clear the rows
                           twxChartController.getChartObject().data.rows = [];
                       }
                    });
                }
            }
        };
    });

    module.directive("twxChartX", function() {
        return {
            restrict: 'E',
            require: '^twxChart',
            link: function(scope, element, attrs, twxChartController) {
                twxChartController.getChartObject().data.cols = [
                    {}
                ];
                var xAxis = twxChartController.getChartObject().data.cols[0];
                if (attrs.title) {
                    twxChartController.getChartObject().options.hAxis.title = attrs.title;
                }
                if (attrs.axisColor) {
                    twxChartController.getChartObject().options.vAxis.baselineColor = attrs.color;
                }
                if (attrs.id) {
                    xAxis.id = attrs.id;
                }
                if (attrs.type) {
                    xAxis.type = attrs.type;
                }
                if (angular.isDefined(attrs.hideLabels)) {
                    twxChartController.getChartObject().options.hAxis.textPosition = 'none';
                }
                if (attrs.labelColor) {
                    twxChartController.getChartObject().options.hAxis.textStyle = {
                        color: attrs.labelColor
                    };
                }
                if (attrs.twxItem) {
                    twxChartController.addColumn(attrs.twxItem);
                }
            }
        };
    });

    module.directive("twxChartY", function() {
        return {
            restrict: 'E',
            require: '^twxChart',
            link: function(scope, element, attrs, twxChartController) {
                if (attrs.title) {
                    twxChartController.getChartObject().options.vAxis.title = attrs.title;
                }
                if (attrs.gridlines) {
                    twxChartController.getChartObject().options.vAxis.gridlines = {'count': attrs.gridlines};
                }
                if (attrs.axisColor) {
                    twxChartController.getChartObject().options.hAxis.baselineColor = attrs.color;
                }
                if (angular.isDefined(attrs.hideLabels)) {
                    twxChartController.getChartObject().options.vAxis.textPosition = 'none';
                }
                if (attrs.labelColor) {
                    twxChartController.getChartObject().options.vAxis.textStyle = {
                        color: attrs.labelColor
                    };
                }
            }
        };
    });

    module.directive("twxChartData", function() {
        return {
            restrict: 'E',
            require: '^twxChart',
            link: function(scope, element, attrs, twxChartController) {
                var dataCol = {};
                twxChartController.getChartObject().data.cols.push(dataCol);
                if (attrs.id) {
                    dataCol.id = attrs.id;
                }
                if (attrs.label) {
                    dataCol.label = attrs.label;
                }
                if (attrs.type) {
                    dataCol.type = attrs.type;
                }
                if (attrs.color) {
                    twxChartController.getChartObject().options.series[twxChartController.getChartObject().data.cols.length-2] = {
                        color: attrs.color
                    };
                }
                if (attrs.twxItem) {
                    twxChartController.addColumn(attrs.twxItem);
                }
            }
        };
    });
})(angular);
