<!doctype html>
<html ng-controller="AppCtrl as app">
<head>
  <meta name="viewport" content="width=device-width, initial-scale=1, maximum-scale=1, user-scalable=no">
  <meta name = "format-detection" content = "telephone=no">
  <link rel="stylesheet" href="css/system-widget-extensions.css?v<%= uuid =%>">
  <link rel="stylesheet" href="css/app-theme.css?v<%= uuid =%>">

  <!-- Extension Stylesheets -->
  {% for s in extensions.stylesheets %}<link rel="stylesheet" href="extensions/<%= s.extension =%>/<%= s.script =%>">
  {% endfor %}

  <link rel="stylesheet" href="css/app-runtime-base.css?v<%= uuid =%>">
  <link rel="stylesheet" href="css/app.css?v<%= uuid =%>">
  <script src="lib/cdn/ionic.bundle.min.js"></script>
  <script src="app-runtime.js"></script>
  <script src="extensions/combined-extension-runtime-libs.js"></script>
</head>
<body ng-cloak {% if menu %} class="leftmenu" {% endif %} onload="loadSetup()">
  {% if offlineSave %}
  <%= deviceHTMLContents =%>
  <%= dataHTMLContents =%>
  {% else %}
  <ng-include src="'app/shared/components/Device.html'"></ng-include>
  <ng-include src="'app/shared/components/Data.html'"></ng-include>
  {% endif %}
  <ion-side-menus ng-controller="AppsMenuCtrl" class="seethrough">
    <!-- Center content -->
    <ion-side-menu-content class="seethrough" drag-content="isCordovaApp">
      <ion-nav-view></ion-nav-view>
    </ion-side-menu-content>
  </ion-side-menus>

<script>
angular.module('vuforia-angular', []).factory('vuforiaCleanup', function() { this.cleanUpAndPause = function() {}; return this; }).factory('tml3dRenderer', function() { return this;});
angular.module('ngCordova', []);
angular.module('ngCordova.plugins.network', []);
angular.module('twx.byoc', []);

</script>
<script src="lib/cdn/ngStorage.min.js"></script>
<script src="lib/uuid.js"></script>
<script src='lib/cdn/lodash.min.js'></script>
<script src="lib/twx-connector.js"></script>
<script src="lib/twx-client-core-all.js"></script>
<script src="lib/cdn/ng-google-chart.min.js"></script>
<script src="lib/bower-ng-twx-uicomponents/charts.js"></script>
<script src="lib/http-auth-interceptor.js"></script>
<script src="app/app.js?v<%= uuid =%>"></script>
<script src="lib/cdn/d3.min.js"></script>

<!-- Extension Libraries -->
{% for lib in extensions.runtimeLibraries %}<script src="extensions/<%=  lib.substring(lib.lastIndexOf(PATH_SEP) + 1) =%>"></script>
{% endfor %}

<!-- Extension Angular Modules -->
{% for module in extensions.angular_modules %}<script src="extensions/<%=  module.substring(module.lastIndexOf(PATH_SEP) + 1) =%>"></script>
{% endfor %}

<script type="text/javascript">
(function updateTitleWithExpTitle() {
    var appMetadata = <%= metadata =%>;
    var defaultParams = <%= parameters =%>;

    Object.keys(defaultParams).forEach(function(key) {
         if (defaultParams[key].value) {
            window.twx.app.params[key] = defaultParams[key].value;
         }
    });

    function getParameterByName(name, url) {
        name = name.replace(/[\[\]]/g, "\\$&");
        var regex = new RegExp("[?&]" + name + "(=([^&#]*)|&|#|$)"),
            results = regex.exec(url);

        if (!results) return null;
        if (!results[2]) return '';
        return decodeURIComponent(results[2].replace(/\+/g, " "));
    }

    var expIdx = getParameterByName('expIndex', location.href);
    if (expIdx !== null && expIdx !== '') {
        document.title = appMetadata.experiences[parseInt(expIdx,10)].title.en;
    }
})();

var setUpAngularModuleAndBootstrap = function() {
  setUpAngularModuleAndBootstrap = function() {}; //no-op guarantees won't run twice
  angular.module('app')
    .config(['$stateProvider', '$urlRouterProvider', function ($stateProvider, $urlRouterProvider) {

      $stateProvider

        {% for v in views %}
        .state('<%= v.fileName =%>', {
          url: '/<%= v.fileName =%>?entityName&thing&template&vumark',
          {% if offlineSave %}template: <%= v.inlineableHTML =%>,{% else %}templateUrl: 'app/components/<%= v.fileName =%>.html',{% endif %}
          cache: false,
          controller: 'BaseCtrl'
        })
        {% endfor %}

      $urlRouterProvider.otherwise('/<%= defaultRoute =%>');
    }]).run(function($rootScope, $timeout) {
       $rootScope.expTitle = document.title;
       $rootScope.$on('$ionicView.afterEnter', function(event, toState, toParams, fromState, fromParams) {
          $timeout(function() {
               document.title = $rootScope.expTitle;
          }, 1);
       });
    });

  angular.bootstrap(document, ['app']);
};

var setupWrapper = function() {setUpAngularModuleAndBootstrap();};
function setupIonicListener() {
    window.ionic.Platform.ready(setupWrapper);
}
function loadSetup() {
    window.removeEventListener('load', loadSetup, false);
    if (window.cordova && window.cordova.plugins) {
        setupIonicListener();
    }
    else {
       document.addEventListener('deviceready', setupIonicListener, false);
       //Add in a desktop ready event here...
       //desktop-ready-replacement
    }
    //<Replace-add-on-load>
}
window.addEventListener('load', loadSetup);
</script>
</body>
</html>
