/* begin copyright text
 *
 * Copyright Â© 2016 PTC Inc., Its Subsidiary Companies, and /or its Partners. All Rights Reserved.
 *
 * end copyright text
 */
var fs = require('fs-extra');
var _nexus3rdPartyContent = 'http://cpmdev-nexus.rd1.thingworx.io:8081/service/local/repositories/third-party/content/';
var gulp = require('gulp');
var gulpDebug = require('gulp-debug');
var download = require('gulp-download');
var concat = require('gulp-concat');
var unzip = require('gulp-unzip');
var Server = require('karma').Server;
var path = require('path');
var cache = 'cache/';
var del = require('del');

var config = {
  'thingview': {
    'src': _nexus3rdPartyContent + 'com/ptc/vis/thingview/thingview-js/0.6.131/thingview-js-0.6.131.zip',
    'file': 'thingview-js-0.6.131.zip',
    'dest': [
      'widgets/twx-mobile-widgets-3d/ide/'
    ]
  },

  'preview_3d': {
    'bundle_content': [
      'widgets/twx-mobile-widgets-3d/ide/js/ptc/thingview/thingview.js',
      'widgets/twx-mobile-widgets-3d/ide/js/twx-mobile-widgets-3d-ng.js',
      'widgets/twx-mobile-widgets-3d/ide/js/ptc/thingview/libthingview.js'
    ],
    'dest': 'src/ar/preview3d'
  }
};

fs.copy('./node_modules/tml/src', 'src/src-scaffold/phone/tml', {
  filter: function(item) {
    return !/\.git/.test(item);
  }
});

gulp.task('clean', function(){
  del.sync('src/ar/src-scaffold/', {force: true}); //old directory stuff
  del.sync('src/src-scaffold/tml/', {force: true});
  del.sync('src/ar/preview3d', {force: true});
  return del.sync('src/ar/preview3d-old', {force: true});
});

gulp.task('download-thingview', function() {
  if (global.isProd || !fs.existsSync(cache + config.thingview.file)) {
    return download(config.thingview.src).pipe(gulp.dest(cache));
  }
});

gulp.task('deploy-thingview', ['download-thingview'], function() {
  return gulp.src(cache + config.thingview.file)
    .pipe(unzip())
    .pipe(gulp.dest(config.thingview.dest[0]));
});

gulp.task('preview3d_bundler', ['deploy-thingview'], function() {
  return gulp.src(config.preview_3d.bundle_content)
    .pipe(gulpDebug({title: "preview"}))
    .pipe(concat('preview-3d.js'))
    .pipe(gulp.dest(config.preview_3d.dest)); //during dev there may be more then 1
});

gulp.task('build', ['clean', 'preview3d_bundler', 'deploy-thingview']);
gulp.start('build');

gulp.task('unit', function(done) {
  new Server({
    configFile: path.resolve('./test/karma.conf.js'),
    singleRun: true
  }, done).start();
});

//continuous mode
gulp.task('unit-dev', function(done) {
  new Server({
    configFile: path.resolve('./test/karma.conf.js')
  }, done).start();
});

