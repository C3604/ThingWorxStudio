/* begin copyright text
 *
 * Copyright Â© 2016 PTC Inc., Its Subsidiary Companies, and /or its Partners. All Rights Reserved.
 *
 * end copyright text
 */
(function(twxAppBuilder){

function newDtModelitem( widgetLabel ) {
  var ELEMENT_NAME = 'twx-dt-modelitem';
  var overlay = {};

  overlay.model = {
      name: 'model',
      label: 'ves-ar-extension:Model Widget ID',
      datatype: 'string',
      default: '',
      isBindingTarget: false,
      sortOrder: 1,
      tFrag: 'for="#model#" '
  };

  overlay.idpath = {
      name: 'idpath',
      label: 'ves-ar-extension:Component Occurrence',
      datatype: 'string',
      default: '',
      isBindingTarget: false,
      sortOrder: 2,
      tFrag: 'occurrence="#idpath#" '
  };
  
  overlay.texture = {
      name: 'texture',
      label: 'ves-ar-extension:Texture',
      datatype: 'resource_url',
      default: '',
      isBindingTarget: true,
      isVisible: false
  };

  overlay.color = {
      name: 'color',
      label: 'ves-ar-extension:Color',
      datatype: 'color',
      default: '',
      isBindingTarget: true
  };
  
  overlay.translucent = {
    name: 'translucent',
    label: 'ves-ar-extension:Item Translucence',
    datatype: 'boolean',
    default: false,
    isBindingTarget: true,
    sortOrder: 243,
    tFrag: 'phantom="{{!me.translucent}}" ',
    isVisible: false,
    isDeprecated: true
  };
  
  overlay.forceHidden = {
    name: 'forceHidden',
    label: 'ves-ar-extension:Force Hide',
    datatype: 'boolean',
    default: false,
    isBindingTarget: true,
    sortOrder: 180,
    isVisible: false,
    tFrag: 'force-hidden="{{me.forceHidden}}"'
  };

  var removals = ['billboard'];
  var props = Twx3dCommon.new3dProps(overlay, removals);
  var template = Twx3dCommon.buildRuntimeTemplate(ELEMENT_NAME, props);

  var retObj = {
    elementTag: ELEMENT_NAME,

    isVisibleInPalette: true,

    category: 'ar',

    label: widgetLabel,

    allowCopy: false,  //Until its a child of model, its too problematic to copy/paste them

    isContainer: false,
    
    properties: props,

    events: [
      {
        name: 'click',
        label: 'ves-ar-extension:Click'
      }
    ],
 
    designTemplate: function (props) {
      return('<!-- twxDtModelitem -->');
    },

    runtimeTemplate: function (props) {
      var tmpl = template.replace("#widgetId#", props.widgetId);
      var tmpl2 = tmpl.replace("#model#", props.model);
      var tmpl3 = tmpl2.replace("#idpath#", props.idpath);
      //console.log("twxDtModelitem template string: %s",tmpl);
      return tmpl3;
    }
    
  };

  return retObj;
}
function twxDtModelitem() {
  var widget = Twx3dCommon.getWidget( 'Model Item', newDtModelitem );
  return widget;
}

twxAppBuilder.widget('twxDtModelitem', twxDtModelitem);

})(twxAppBuilder);
